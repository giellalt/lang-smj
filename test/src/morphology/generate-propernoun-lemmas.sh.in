#!/bin/bash
# @configure_input@

# Automake interprets the exit status as follows:
# - an exit status of 0 will denote a success
# - an exit status of 77 a skipped test
# - an exit status of 99 a hard error
# - any other exit status will denote a failure.

# To run this test script only, do:
#
# make check TESTS=generate-noun-lemmas.sh

# Dette skriptet tester at alle lemmaene i
# $GTHOME/langs/smj/src/morphology/stems/propernouns.lexc kan genereres.
# De som ikke kan genereres, kopieres til missingProperLemmas.*fst.txt

###### Variables: #######
### in ###
source_file=./../../../src/morphology/generated_files/smi-smj-propernouns.lexc
generator_file=./../../../src/generator-gt-norm

### out ###
lemmas=./filtered-propnouns
lemmas_attr=./filtered-attr-propnouns
generated_lemmas=./generated-propnouns
generated_attr_lemmas=./generated-attr-propnouns
result_file=missing_proper_lemmas

# Check that the source file exists:
if [ ! -f "$source_file" ]; then
    echo
    echo "*** Warning: Source file $source_file not found."
    echo
    exit 77
fi

# Use autotools mechanisms to only run the configured fst types in the tests:
fsttype=
@CAN_HFST_TRUE@fsttype="$fsttype hfst"
@CAN_XFST_TRUE@fsttype="$fsttype xfst"

# Exit if both hfst and xerox have been shut off:
if [ -z $fsttype ]; then
    echo "All transducer types have been shut off at configure time."
    echo "Nothing to test. Skipping."
    exit 77
fi

# Get external Mac editor for viewing failed results from configure:
EXTEDITOR=@SEE@

###### Extraction: #######
@GTCORE@/scripts/extract-lemmas.sh \
	--exclude "(LAANTE|Attr|Rreal | R |ShCmp|RCmpnd|CmpN/Only)" $source_file \
	> $lemmas.tmp
@GTCORE@/scripts/extract-lemmas.sh \
	--include "(LAANTE)" $source_file | sed 's/$/laante/' \
	>> $lemmas.tmp
sort -u $lemmas.tmp > $lemmas
rm -f $lemmas.tmp

@GTCORE@/scripts/extract-lemmas.sh \
	--include "(Attr)" $source_file \
	> $lemmas_attr

###### Start testing: #######
transducer_found=0
Fail=0

for f in $fsttype; do
	if [ $f == "xfst" ]; then
		lookuptool="@LOOKUP@ -q -flags mbTT"
		suffix="xfst"
	elif [ $f == "hfst" ]; then
		lookuptool="@HFST_LOOKUP@ -q"
		suffix="hfstol"
	else
	    Fail=1
		echo "Unknown fst type!"
	    echo "$f - FAIL"
	    continue
	fi
	if [ -f "$generator_file.$suffix" ]; then
		let "transducer_found += 1"

###### Test regular propers: #######
		sed 's/$/+N+Prop+Sg+Nom/'   $lemmas \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			| grep -v "N+" | grep -v "^$" | sort -u > $generated_lemmas.$f.txt

###### Test plural propers: #######
		sed 's/$/+N+Prop+Sg+Nom/'   $lemmas \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			| grep "N+" | cut -d "+" -f1 | sed 's/$/+N+Prop+Pl+Nom/' \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			| grep -v "^$" | cut -d "+" -f1 >> $generated_lemmas.$f.txt

###### Test plural propers: #######
		sed 's/$/+N+Prop+Sg+Nom/'   $lemmas \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			| grep "N+" | cut -d "+" -f1 | sed 's/$/+N+Prop+Pl+Nom/' \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			| grep "N+" | cut -d "+" -f1 > $result_file.$f.txt

###### Test attr propers: #######
		sed 's/$/+N+Prop+Attr/' $lemmas_attr \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			| grep "N+" >> $result_file.$f.txt

###### Test attr propers: #######
		sed 's/$/+N+Prop+Attr/' $lemmas_attr \
			| $lookuptool $generator_file.$suffix | cut -f2 \
			|  grep -v "N+" | grep -v "^$" \
			| sort -u > $generated_attr_lemmas.$f.txt

###### Collect results: #######
		sort -u -o $generated_lemmas.$f.txt $generated_lemmas.$f.txt
		comm -23 $lemmas $generated_lemmas.$f.txt > $result_file.$f.txt
		comm -23 $lemmas_attr $generated_attr_lemmas.$f.txt >> $result_file.$f.txt
		sort -u -o $result_file.$f.txt $result_file.$f.txt

# Sammenlikne: Former som er i lemmalista men ikke i lista med genererte former,
# lagre i $result_file.$f.txt. Formene generes med  +N+Prop+Sg+Nom for
# enklere debugging.
		comm -23 $lemmas $generated_lemmas.$f.txt | sed 's/$/+N+Prop+Sg+Nom/' \
		     | $lookuptool $generator_file.$suffix >> $result_file.$f.txt

		# if at least one word is found, the test failed, and the list of failed
		# lemmas is opened in SubEthaEdit:
		if [ -s $result_file.$f.txt ]
		then
			# Only open the failed lemmas in see if @SEE@ is defined:
			if [ "$EXTEDITOR" ]; then
				$EXTEDITOR $result_file.$f.txt
			fi
		    Fail=1
		    echo "$f - FAIL"
		    continue
		fi
	    echo "$f - PASS"
	fi
done

# Delete temporary files:
rm -f $lemmas $lemmas_attr $generated_lemmas $generated_attr_lemmas

# At least one of the Xerox or HFST tests failed:
if [ "$Fail" = "1" ]; then
	exit 1
fi

if [ $transducer_found -eq 0 ]; then
    echo No transducer found
    exit 1
fi
