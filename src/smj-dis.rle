# =================================================================== #
# =================================================================== #
#              L U L E   S Á M I   D I S A M B I G U A T O R          #
# =================================================================== #
# =================================================================== #

            # =========================================== #
            #            Short table of contents          #
            # =========================================== #

            # Delimiters
            # Tags and sets
	        # Mapping rules
            # Disambiguation rules
              # One-cohort disambiguation - cycle 0
              # Local disambiguation - cycles 1 and 2
              # Cycle 2: Other local disambiguation         
              # Cycle 3: Global disambiguation 
	          # Cycle 4: Syntactic disambiguation 
	          # Cycle 5: Post-syntactic morphological disambiguation


# ========== #
# Delimiters #
# ========== #


DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>";


# ============= #
# Tags and sets #
# ============= #


# ========
   SETS
# ========

LIST BOS = (>>>) (<s>); LIST EOS = (<<<) (</s>); # vislcg and CG-2 together.

# Tags declared as single-membered LISTs 
# ======================================


# Parts of speech
# ---------------

LIST N = N ; LIST A = A ; LIST Adv = Adv ; LIST V = V ; LIST Pron = Pron ;
LIST CS = CS ; LIST CC = CC ; LIST Po = Po ; LIST Pr = Pr ;
LIST Pcle = Pcle ; LIST Qst = Qst ; LIST Num = Num ; LIST Prop = Prop ;

# POS sub-categories
# ------------------

LIST Pers = Pers ; LIST Dem = Dem ; LIST Interr = Interr ;
LIST Indef = Indef ;
LIST Recipr = Recipr ; LIST Refl = Refl ; LIST Rel = Rel ; 
LIST Interj = Interj ; LIST Adp = Adp ; 


# Morphosyntactic properties
# --------------------------

LIST Sg = Sg ; LIST Pl = Pl ;

LIST Nom = Nom ; LIST Gen = Gen ; LIST Acc = Acc ;
LIST Ill = Ill ; LIST Ine = Ine ; LIST Ela = Ela ;
LIST Com = Com ; LIST Ess = Ess ; LIST Par = Par ; LIST Abe = Abe ;

LIST SgCmp = SgCmp ; LIST SgNomCmp = SgNomCmp ;
LIST SgGenCmp = SgGenCmp ; LIST PlGenCmp = PlGenCmp ; 
LIST Cmpnd = Cmpnd ;

LIST PxSg1 = PxSg1 ; LIST PxSg2 = PxSg2 ; LIST PxSg3 = PxSg3 ;
LIST PxDu1 = PxDu1 ; LIST PxDu2 = PxDu2 ; LIST PxDu3 = PxDu3 ;
LIST PxPl1 = PxPl1 ; LIST PxPl2 = PxPl2 ; LIST PxPl3 = PxPl3 ;

LIST Comp = Comp ; LIST Superl = Superl ; LIST Actor = Actor ;
LIST Actio = Actio ; LIST Clt = Clt ; LIST Attr = Attr ;
LIST Card = Card ; LIST Ord = Ord ; 
LIST Date = Date ; LIST Range = Range ;
LIST Dim = Dim ; LIST Inch = Inch ; LIST Pass = Pass ;

LIST Prs = Prs ; LIST Prt = Prt ;
LIST Ind = Ind ; LIST Pot = Pot ; LIST Cond = Cond ;
LIST Imprt = Imprt ; LIST ImprtII = ImprtII ; LIST Sup = Sup ;
LIST IV = IV ; LIST TV = TV ;

LIST Sg1 = Sg1 ; LIST Sg2 = Sg2 ; LIST Sg3 = Sg3 ;
LIST Du1 = Du1 ; LIST Du2 = Du2 ; LIST Du3 = Du3 ;
LIST Pl1 = Pl1 ; LIST Pl2 = Pl2 ; LIST Pl3 = Pl3 ;

LIST Inf = Inf ; LIST Ger = Ger ; LIST GerII = GerII ;
LIST ConNeg = ConNeg ; LIST Neg = Neg ;
LIST PrsPrc = PrsPrc ; LIST PrfPrc = PrfPrc ;
LIST VGen = VGen ; LIST VAbess = VAbess ;

LIST CLB = CLB ; LIST PUNCT = PUNCT ; 
LIST LEFT = LEFT ; LIST RIGHT = RIGHT ;
LIST HYPH = HYPH ; LIST PAR = PAR ;


# Derivation
# ----------

LIST Der/agák = Der/agák ; LIST Der/ahkes = Der/ahkes ; 
LIST Der/ahtes = Der/ahtes ; LIST Der/ahtte = Der/ahtte ;
LIST Der/alla = Der/alla ; LIST Der/asste = Der/asste ;
LIST Der/belak = Der/belak ; LIST Der/bieljak = Der/bieljak ;
LIST Der/báguk = Der/báguk ; LIST Der/bájnuk = Der/bájnuk ;
LIST Der/bának = Der/bának ; LIST Der/d = Der/d ;
LIST Der/dahka = Der/dahka ; LIST Der/dahtte = Der/dahtte ;
LIST Der/dalla = Der/dalla ; LIST Der/dasste = Der/dasste ;
LIST Der/dibme = Der/dibme ; LIST Der/duhtte = Der/duhtte ;
LIST Der/duvva = Der/duvva ; LIST Der/dábak = Der/dábak ;
LIST Der/dáfuk = Der/dáfuk ; LIST Der/dávdak = Der/dávdak ;
LIST Der/dávtak = Der/dávtak ; LIST Der/ferjak = Der/ferjak ;
LIST Der/garák = Der/garák ; LIST Der/gattsak = Der/gattsak ;
LIST Der/gerdak = Der/gerdak ; LIST Der/giedak = Der/giedak ;
LIST Der/gielak = Der/gielak ; LIST Der/giesjkak = Der/giesjkak ;
LIST Der/gietjak = Der/gietjak ; LIST Der/girjak = Der/girjak ;
LIST Der/guovluk = Der/guovluk ; LIST Der/h = Der/h ;
LIST Der/habsak = Der/habsak ; LIST Der/hekkak = Der/hekkak ;
LIST Der/hábjak = Der/hábjak ; LIST Der/hájak = Der/hájak ; 
LIST Der/hámak = Der/hámak ; LIST Der/hápsak = Der/hápsak ;
LIST Der/ivnak = Der/ivnak ; LIST Der/jagák = Der/jagák ;
LIST Der/jergak = Der/jergak ; LIST Der/jienak = Der/jienak ;
LIST Der/jiermak = Der/jiermak ; LIST Der/juolgak = Der/juolgak ;
LIST Der/l = Der/l ; LIST Der/ladda = Der/ladda ;
LIST Der/lahkak = Der/lahkak ; LIST Der/lahtte = Der/lahtte ;
LIST Der/lanják = Der/lanják ; LIST Der/lasj = Der/lasj ;
LIST Der/lasste = Der/lasste ; LIST Der/lijkak = Der/lijkak ;
LIST Der/linnjak = Der/linnjak ; LIST Der/lis = Der/lis ;
LIST Der/luonduk = Der/luonduk ; LIST Der/luottak = Der/luottak ;
LIST Der/lágán = Der/lágán ; LIST Der/lágásj = Der/lágásj ;
LIST Der/merkak = Der/merkak ; LIST Der/mielak = Der/mielak ;
LIST Der/muoduk = Der/muoduk ; LIST Der/mus = Der/mus ;
LIST Der/n = Der/n ; LIST Der/namák = Der/namák ;
LIST Der/nierak = Der/nierak ; LIST Der/njunjak = Der/njunjak ;
LIST Der/njálmak = Der/njálmak ; LIST Der/nálak = Der/nálak ;
LIST Der/r = Der/r ; LIST Der/rabdak = Der/rabdak ;
LIST Der/rattak = Der/rattak ; LIST Der/rávak = Der/rávak ;
LIST Der/segak = Der/segak ; LIST Der/siejbak = Der/siejbak ;
LIST Der/siejnak = Der/siejnak ; LIST Der/sijduk = Der/sijduk ;
LIST Der/st = Der/st ; LIST Der/stahtte = Der/stahtte ;
LIST Der/stalla = Der/stalla ;
LIST Der/stasste = Der/stasste ; LIST Der/stával = Der/stával ;
LIST Der/suorak = Der/suorak ; LIST Der/suorgak = Der/suorgak ;
LIST Der/suttak = Der/suttak ; LIST Der/sáv'vak = Der/sáv'vak ;
LIST Der/tjalmak = Der/tjalmak ; LIST Der/tjiegak = Der/tjiegak ;
LIST Der/tjuolmak = Der/tjuolmak ; LIST Der/tjuvdak = Der/tjuvdak ;
LIST Der/tjålak = Der/tjålak ; LIST Der/tjårvak = Der/tjårvak ;
LIST Der/u/a/åd = Der/u/a/åd ; LIST Der/us = Der/us ;
LIST Der/uvsak = Der/uvsak ; LIST Der/uvsuk = Der/uvsuk ;
LIST Der/varák = Der/varák ; LIST Der/vigák = Der/vigák ;
LIST Der/vuobdak = Der/vuobdak ; LIST Der/vuoduk = Der/vuoduk ;
LIST Der/vuohta = Der/vuohta ; LIST Der/vájmuk = Der/vájmuk ;
LIST Der/ájvukDer/såjak = Der/ájvukDer/såjak ;
LIST Der/åjvak = Der/åjvak ; LIST Der/åsak = Der/åsak ;

LIST DERIVED =
  Der/agák Der/ahkes Der/ahtes Der/ahtte Der/alla Der/asste Der/belak
  Der/bieljak Der/báguk Der/bájnuk Der/bának Der/d Der/dahka Der/dahtte
  Der/dalla Der/dasste Der/dibme Der/duhtte Der/duvva Der/dábak
  Der/dáfuk Der/dávdak Der/dávtak Der/ferjak Der/garák Der/gattsak
  Der/gerdak Der/giedak Der/gielak Der/giesjkak Der/gietjak Der/girjak
  Der/guovluk Der/h Der/habsak Der/hekkak Der/hábjak Der/hájak Der/hámak
  Der/hápsak Der/ivnak Der/jagák Der/jergak Der/jienak Der/jiermak
  Der/juolgak Der/l Der/ladda Der/lahkak Der/lahtte Der/lanják Der/lasj
  Der/lasste Der/lijkak Der/linnjak Der/lis Der/luonduk Der/luottak
  Der/lágán Der/lágásj Der/merkak Der/mielak Der/muoduk Der/mus Der/n
  Der/namák Der/nierak Der/njunjak Der/njálmak Der/nálak Der/r
  Der/rabdak Der/rattak Der/rávak Der/segak Der/siejbak Der/siejnak
  Der/sijduk Der/st Der/stahtte Der/stalla Der/stasste Der/stával
  Der/suorak Der/suorgak Der/suttak Der/sáv'vak Der/tjalmak Der/tjiegak
  Der/tjuolmak Der/tjuvdak Der/tjålak Der/tjårvak Der/u/a/åd Der/us
  Der/uvsak Der/uvsuk Der/varák Der/vigák Der/vuobdak Der/vuoduk
  Der/vuohta Der/vájmuk Der/ájvuk Der/såjak Der/åjvak Der/åsak ;
  


# Syntactic tags
# --------------

LIST @+FAUXV = @+FAUXV ; LIST @+FMAINV = @+FMAINV ; LIST @-FAUXV = @-FAUXV ; 
LIST @-FMAINV = @-FMAINV ; LIST @-FSUBJ = @-FSUBJ ; 

SET FMAINV = @-FMAINV | @+FMAINV ;

LIST @ADV-A = @ADV-A ; LIST @ADV-ADV = @ADV-ADV ; LIST @ADVL = @ADVL ; 

LIST @AN> = @AN> ; LIST @ActioN> = @ActioN> ; LIST @CC = @CC ; LIST @CMPND = @CMPND ; LIST @CS = @CS ; 
LIST @DN> = @DN> ; LIST @GA> = @GA> ; LIST @GN> = @GN> ; LIST @GP< = @GP< ; LIST @GP> = @GP> ; 
LIST @HNOUN = @HNOUN ; LIST @INTERJ = @INTERJ ; LIST @MEASURE = @MEASURE ; 
LIST @NNum> = @NNum>; LIST @NumN< = @NumN<;
LIST @NPron< = @NPron< ;
LIST @NQ< = @NQ< ;  LIST @NUM-PRON = @NUM-PRON ; #LIST @NUMBER = @NUMBER ;
LIST @OBJ = @OBJ ; 
LIST @OPRED = @OPRED ; LIST @PCLE = @PCLE ; LIST @PCLE-COMPL = @PCLE-COMPL ; LIST @PROP> = @PROP> ; 
LIST @PrcN> = @PrcN> ; LIST @PronN< = @PronN< ; LIST @PronN> = @PronN> ;  LIST @QN< = @QN< ; 
LIST @QN> = @QN> ; LIST @SPRED = @SPRED ; LIST @SUBJ = @SUBJ ; LIST @SUBJ-QH = @SUBJ-QH ; 


LIST @TITLE = @TITLE ; LIST @VOC = @VOC ; LIST @X = @X ;


# Semantic tags
# -------------

LIST Ani = Ani ; LIST Fem = Fem ; LIST Mal = Mal ;
LIST Obj = Obj ; List Org = Org ; LIST Plc = Plc ;
LIST Sur = Sur ; LIST Tit = Tit ;

# Other tags
# ----------

LIST ABBR = ABBR ; LIST ACR = ACR ; 


# Single-word sets
# ----------------
 
LIST COMMA = "," ; LIST ¶ = ¶;

#LIST OKTA = "okta"; LIST gå = "gå" ; 

# Initials
# --------

LIST INITIAL =  "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
                "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
                "á" "æ" "ø" "å" "ö" "ä" ;


# ======== #
# Tag sets #
# ======== #
   SETS    #
# ======== #




LIST WORD = N A Adv V Pron CS CC Adp Po Pr Interj Pcle Pers Dem Interr Refl Recipr Rel Indef ; # any word


# Derivational sets
# -----------------
# (Check these sets)

LIST N-DER = Der/vuohta Der/lis Der/mus Der/dahka Der/us Der/ahkes ;

LIST V-DER = Der/r Der/d Der/dalla Der/l Der/st Der/h
Der/dahtte Der/dasste Der/stalla Der/stahtte Der/stasste
Der/ladda  Der/lahtte Der/lasste Der/u/a/år  Der/ahtte Der/alla
Der/asste  Der/duvva  Der/duhtte ;

LIST A-DER = Der/dibme Der/lasj Der/lágásj Der/lágán Der/ahtes
Der/juolgak Der/luottak Der/suttak Der/uvsuk Der/jienak
Der/rattak Der/hekkak Der/åjvak Der/belak Der/sijduk Der/giedak
Der/gielak Der/muoduk Der/varák Der/báguk Der/nálak Der/rabdak
Der/rávak Der/ájvukDer/såjak Der/giesjkak Der/bának Der/njálmak
Der/nierak Der/merkak Der/suorgak Der/suorak Der/gattsak
Der/siejbak Der/siejnak Der/hájak Der/habsak Der/hápsak
Der/hábjak Der/sáv'vak Der/namák Der/lanják Der/vuoduk Der/hámak
Der/linnjak Der/lijkak Der/dávtak Der/tjårvak Der/gietjak
Der/bieljak Der/tjuvdak Der/dábak Der/tjiegak Der/gerdak
Der/vuobdak Der/uvsak Der/ivnak Der/ferjak Der/bájnuk
Der/luonduk Der/dávdak Der/jergak Der/mielak Der/jiermak
Der/njunjak Der/guovluk Der/dáfuk Der/vájmuk Der/lahkak Der/åsak
Der/garák Der/tjuolmak Der/tjålak Der/segak Der/tjalmak
Der/vigák Der/girjak Der/stával Der/agák Der/jagák ;

SET NOT-DER = WORD - DERIVED ;

# Case sets
# ---------
LIST ADVLCASE =             Ill Ine Ela Com Ess     ;
LIST OBLCASE  =     Acc Gen Ill Ine Ela Com Ess Par ;
LIST CASE     = Nom Acc Gen Ill Ine Ela Com Ess Par ;

#SET NOT-NOM = CASE - Nom ;
#SET NOT-GEN = CASE - Gen ;
#SET NOT-ACC = CASE - Acc ;

# Noun sets
# ---------

LIST N-SG-NOM = (N Sg Nom); LIST N-PL-NOM = (N Pl Nom);
LIST N-NOM = (N Nom) ; LIST N-GEN = (N Gen);

SET LEX-N = N - N-DER;
SET NOT-ACTOR = N - Actor ;

LIST PROP = (N Prop);
SET CNOUN = N - Prop;
SET CNOUN-PL-NOM = (N Pl Nom) - Prop ;
SET HNOUN = N - Cmpnd ;
SET HNOUN-NOM = (N Nom) - Cmpnd ;
SET N-NOT-GEN = N - (N Gen) ;

# Adjective sets
# --------------

SET LEX-A = A - A-DER;

# Verb sets
# ---------

SET LEX-V = V - V-DER;

# Finiteness and mood
# - - - - - - - - - -

SET V-IND-FIN = Prs | Prt ; # Problem: "In boahtán" is an invisible indicative
SET V-MOOD = Prs | Prt | Pot | Imprt | Cond ;
SET VFIN = V-MOOD - ConNeg ;
SET VFIN-POS = V-MOOD - ConNeg - Neg ;
SET VFIN-NOT-IMP = VFIN - Imprt ;

SET VFIN-NOT-NEG = VFIN - (Neg Foc) ;

# Person
# - - - - 

LIST V-SG1 = (V  Ind Prs Sg1) (V Ind Prt Sg1) (V Cond Prs Sg1) 
             (V Cond Prt Sg1) (V Pot Prs Sg1) (V  Neg Ind Sg1); 
LIST V-SG2 = (V  Ind Prs Sg2) (V Ind Prt Sg2) (V Cond Prs Sg2) 
             (V Cond Prt Sg2) (V Pot Prs Sg2) (V  Neg Ind Sg2); 
LIST V-SG3 = (V  Ind Prs Sg3) (V Ind Prt Sg3) (V Cond Prs Sg3) 
             (V Cond Prt Sg3) (V Pot Prs Sg3) (V  Neg Ind Sg3); 
LIST V-DU1 = (V  Ind Prs Du1) (V Ind Prt Du1) (V Cond Prs Du1) 
	     (V Cond Prt Du1) (V Pot Prs Du1) (V  Neg Ind Du1); 
LIST V-DU2 = (V  Ind Prs Du2) (V Ind Prt Du2) (V Cond Prs Du2) 
	     (V Cond Prt Du2) (V Pot Prs Du2) (V  Neg Ind Du2); 
LIST V-DU3 = (V  Ind Prs Du3) (V Ind Prt Du3) (V Cond Prs Du3) 
	     (V Cond Prt Du3) (V Pot Prs Du3) (V  Neg Ind Du3); 
LIST V-PL1 = (V  Ind Prs Pl1) (V Ind Prt Pl1) (V Cond Prs Pl1) 
             (V Cond Prt Pl1) (V Pot Prs Pl1) (V  Neg Ind Pl1); 
LIST V-PL2 = (V  Ind Prs Pl2) (V Ind Prt Pl2) (V Cond Prs Pl2) 
             (V Cond Prt Pl2) (V Pot Prs Pl2) (V  Neg Ind Pl2); 
LIST V-PL3 = (V  Ind Prs Pl3) (V Ind Prt Pl3) (V Cond Prs Pl3) 
             (V Cond Prt Pl3) (V Pot Prs Pl3) (V  Neg Ind Pl3); 

 # Note that imperative verbs are not included in these sets!


# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -

SET V-DU = V-DU1 | V-DU2 | V-DU3 ;
SET V-PL = V-PL1 | V-PL2 | V-PL3 ;

SET V-DU-PL = V-DU1 | V-DU2 | V-DU3 | V-PL1 | V-PL2 | V-PL3 ;

SET V-NOT-SG1 = VFIN-NOT-IMP - V-SG1 ;

SET V-NOT-SG3 = V-SG1 | V-SG2 | V-DU1 | V-DU2 | V-DU3 |
                V-PL1 | V-PL2 | V-PL3 ;

SET V-1-2 = V-SG1 | V-SG2 | V-DU1 | V-DU2 | V-PL1 | V-PL2 ;
SET V-3   = V-SG3 | V-DU3 | V-PL3 ;

# Sets consisting of forms of "leat" (these ones need to be rewritten)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Pronoun sets
# ------------

SETS

SET MUN = (Pron Pers Sg1 Nom);
SET DON = (Pron Pers Sg2 Nom);
SET SON = ("son" Pron Pers Sg3 Nom);
SET MOAI = (Pron Pers Du1 Nom);
SET DOAI = (Pron Pers Du2 Nom);
SET SOAI = (Pron Pers Du3 Nom);
SET MII-PERS = (Pron Pers Pl1 Nom);
SET DII = (Pron Pers Pl2 Nom);
SET SII = ("son" Pron Pers Pl3 Nom);

SET PPRON-DU-PL = MOAI | DOAI | SOAI | MII-PERS | DII | SII ;

SET PPRON-NOT-SII = MUN | DON | SON | MOAI | DOAI | SOAI | MII-PERS | DII ;

LIST PPRON-GEN = (Sg1 Gen) (Sg2 Gen) (Sg3 Gen) (Du1 Gen) (Du2 Gen) (Du3 Gen) 
	(Pl1 Gen) (Pl2 Gen) (Pl3 Gen);

SET PPRON-NOT-GEN = (Pron Pers) - PPRON-GEN ;

SET DEM-SG = (Pron Dem Sg Nom);
SET DEM-PL = (Pron Dem Pl Nom);
SET NOT-DEM = WORD - Dem ;


# Adjectival sets and their complements
# -------------------------------------

SET A-ATTR = (A Attr) ; # Used in one rule. Not needed? 

#SET LEX-A = A - A-DER ;

SET A-CASE = A - Attr - Adv ;

LIST A-CC = A CC ;

SET NOT-ADJ = WORD - A ;
SET NOT-Attr = WORD - Attr ;
SET NOT-AA = WORD - A - Adv ;


# Adverbial sets and their complements
# ------------------------------------

SET NOT-ADJ-PCLE = WORD - A - Pcle ;
SET NOT-ADJ-CC = WORD - A-CC ;
SET NOT-ADV = WORD - Adv ;
SET NOT-ADV-PCLE = WORD - Adv - Pcle ;

LIST MANNE = "gåsi" "goasse" "goassa" "goassis" "gåkku" "gånne" "gåste" "makkir" "makkár" "manne" "manen" "mannas" ;

# Sets for adverbs that have lookalikes
# - - - - - - - - - - - - - - - - - - -
 # Here come some adverbs that have identical twins in other POS. 
 # If these are found in Adv contexts, we treat them as adverbs.

#LIST ADV-NOT-VERB = "dušše" ;

#LIST ADV-NOT-NOUN = "easka" "várra" ;

#LIST ADV-NOT-NAMES = "Ain" "Anne" "Diego" "Dieppe" "Enge" "Galle" "Haga"
                     # "Joba" "Johan" "Liikka" "Mai" "Mannes" "Mo" "Mot" "Naba"
                     # "Nan" "Oktan" "Sierra" "Sokka" "Villa" ;

#SET ADV-NOT-OTHER-POS = ADV-NOT-VERB | ADV-NOT-NOUN | ADV-NOT-NAMES ;


# Sets of elements with common syntactic behaviour
# ================================================
# VERBS
# -----
SET VERB = V - (V N);   # V is all readings with a V tag in them, VERB should
                        # be the ones without an N tag following the V

#SET LEX-V = VERB - V-DER;             # VERB but not V-DER

SET V-NOT-CMPND = V - Cmpnd; # Not in use.


LIST COPULAS = "dáidit" "bissut" "gártat" "leahkit" "leat" "orrut" "šaddat" ;
 # 'Dáidit' can appear without 'leat'.

SET V-NOT-COP = V - COPULAS ;

LIST MOD-ASP = "fertet" ;
#                "berret" "dáidit" "fertet" "galgat" "gillet" "lávet" "sáhttit" 
#		"seahtit" "soaitit" "viggat" ;
 # Verbs that never have arguments of their own - so we leave out "áigut", for ex.

LIST AUX-OR-MAIN = "áiggot" ;
#"beassat" "hálidit" "háliidit" "máhttit" "nagodit" 
#			"orrut" "sihtat" "veadjit";
 # These verbs can take arguments, so they do not belong in the AUX group, 
 # but they are nevertheless mapped to (@+FAUXV). 

SET AUX = COPULAS | Neg | MOD-ASP | AUX-OR-MAIN ; 

SET V-NOT-AUX = V - AUX ;  # The set of verbs that cannot be auxiliaries. 
			   # Does not include AUX-OR-MAIN.

#SET VFIN-NOT-AUX = VFIN - AUX ;
#
#SET V-MAIN = V - COPULAS - Neg - MOD-ASP | ("orrut") ;  # The set of verbs that can be 
#							# main verbs. Includes 
#							# AUX-OR-MAIN.
#
#SET V-DER-PASS = V + V-DER + Pass;    # + is intersection, this should work
#				      # The set is used in one rule with no hits.
#	
#SET V-PASS = (V TV Pass);
#
#SET V-NOT-AUX-PASS = V - AUX - V-PASS ; # No longer in use.
#
#SET V-ACT = V - Pass; # No longer in use.
#
#SET ACT-PRFP = PrfPrc - V-PASS; # Appears in one rule.

SET V-TRANS-ACT = TV - Pass ; 
 # All active verbs with a TV tag, including AUX-OR-MAIN.
 
#SET V-TRANS-ACT-NOT-AUX  = TV - V-PASS - AUX ;

# Sets for verbs choosing oblique objects or adverbials
# - - - - - - - - - - - - - - - - - - - - - - - - - - - 

#LIST INE-VERB =
#LIST COM-VERB = 

LIST ILL-VERB = "riegádit" ;

#LIST ACC-LOC-VERB
#LIST ACC-ILL-VERB

LIST ESS-VERB = "gåhttjot" ;


# Other verb sets
# - - - - - - - -

LIST INF-VERB = "liehket" "galggat" "máhttet" "oadtjot" "sihtat" ;
#LIST ACC-INF-VERB = 


 # These are verbs taking accusative objects and infinitives; 
 # a subset of INF-VERB.
	## Ii suova nieiddas náitalit.


#LIST OPRED-VERB = 
 # Verbs that occur with objects that have secondary predicates.

#LIST MOVEMENT-VERB = "mannat";
 # These verbs typically combine with place adverbials in the genitive case 
 # (i.e. not accusative).

#LIST TOGETHER-VERB = "goallostuvvot" "beaškkehat" "bidjat" "ô ­atnit" "suddat"  "heivet" "biddjojuvvot" "ô ­askit" "geassit" "gullat" "rehkenastit" "ordnet" "soahpat" "gávnnadit" "heivehit" "ô ­atnat" "doaibmat" "iskat" "laktit" "seaguhit";
 # Danger: This list could be to long, in certain respects. 
 # TODO: Think of counter examples, i.e. sentences where we have these verbs, but
 # where oktii is not an adverbial.


# NOUNS
# -----
# NP sets defined according to their morphosyntactic features
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SET NP-HEAD = Pron | HNOUN ;
SET NP-HEAD-SG = (Pron Sg) | (Pron Sg3) | (N Sg) - Cmpnd;
SET NP-HEAD-PL = (Pron Pl) | (Pron Pl3) | (N Pl) - Cmpnd;
SET NP-HEAD-SG-NOM = (Pron Sg Nom) | (Pron Sg3 Nom) | (N Sg Nom) - Cmpnd;
SET NP-HEAD-PL-NOM = (Pron Pl Nom) | (Pron Pl3 Nom) | (N Pl Nom) - Cmpnd;
SET NP-HEAD-NOM = NP-HEAD-SG-NOM | NP-HEAD-PL-NOM; 
SET NP-HEAD-ACC = (Pron Acc) | (N Acc) - Cmpnd;
SET NP-HEAD-GEN = (Pron Gen) | (N Gen) - Cmpnd;

# The PRE-NP-HEAD family of sets
# - - - - - - - - - - - - - - - -

SET PRE-NP-HEAD = (Prop Attr) | (Prop @PROP>) | (A Attr) | ("buorre") | (Pron Pers Gen) | (N Gen) | 
         Num | Cmpnd | CC | (Pron Dem) | (Pron Refl Gen) | (Pron Indef) | 
         (PrfPrc @AN>) | (PrfPrc @PrcN>) | PrsPrc | (A Ord) ;
         # | (Ill LINK 1 (PrfPrc @AN>)) | (Com LINK 1 (PrfPrc @AN>)) | (Loc LINK 1 (PrfPrc @AN>))
         # The strict version of items that can only be premodifiers, not parts of the predicate
         
SET V-PRE-NP = PrfPrc | PrsPrc | Actor |  Actio | (V A) | (Ind Prs Sg3) | (Ind Prs Sg1) | (Imprt Prs Du2) ;
    # to be used together with PRE-NP-HEAD before @PrcN> is disambiguated
         
SET NP-MEMBER  = PRE-NP-HEAD | N ;
SET PRE-A-N   = (Pron Pers Gen) | (Pron Indef) | Num | (A Ord) | (Pron Dem) | (Pron Refl Gen) ;
SET NOT-PRE-A-N = WORD - PRE-A-N ;
SET PRE-APP   = COMMA | (PUNCT LEFT) | PRE-NP-HEAD ; # This set ist not only for what can
                            # stand in front of appositions but also
                            # postmodifiers.
SET PUNCT-LEFT = (PUNCT LEFT) ;
SET PUNCT-RIGHT = (PUNCT RIGHT) ;

# V NPNHAIIP... N
# BOS ... N V

# There must be a sensible naming convention for these sets...
# Most strict BARRIERs...
SET NPNH     = WORD - PRE-NP-HEAD | ABBR ;       # NPNH  = "NOT-PRE-NP-HEAD" 
SET NPNHV    = WORD - PRE-NP-HEAD - V-PRE-NP ;    # including possible verbal premodifiers 
SET NPNHA    = WORD - PRE-NP-HEAD - Adv ;        # NPNHA = "NOT-PRE-NP-HEAD-OR-ADV"
SET NPNHAV   = WORD - PRE-NP-HEAD - Adv - V-PRE-NP ; # including possible verbal premodifiers
SET NPNHAI   = WORD - PRE-NP-HEAD - Adv - Indef ;    # NPNHAI = "     ...-OR-INDEF"
SET NPNHAII  = WORD - PRE-NP-HEAD - Adv - Indef - Ill ; # Illative indir.obj.
SET NPNHAIIP = WORD - PRE-NP-HEAD - Adv - Indef - Ill - Pcle ; # <== is this our NPNH set?
SET NPNHC    = WORD - PRE-NP-HEAD - Com ; # "njaŋggofirpmiiguin bivdin"
SET NPNHCCC  = WORD - PRE-NP-HEAD - COMMA ;
SET NAPP     = WORD - PRE-APP ;
# SET TOLERANT-PRENPP = V ; (everything non-NP-head!)
# ... Most sloppy BARRIERs

# Set for NP with participle premodifier
# ... IF *-1 X BARRIER NPNH OR 
# LocComIll are ok, but only with a PrfPcc to the right


# Other negatively defined sets
# - - - - - - - - - - - - - - -

SET NOT-N = WORD - N ;
SET NOT-A = WORD - A ;
SET NOT-NA = WORD - N - A ;
SET NOT-NP = VFIN-NOT-NEG | ConNeg | Inf | Pcle | Interj | CS ; # The set NP-BOUNDARY is bigger. 
SET NPROP = N - PROP ;
SET NOT-COMMA = CLB - COMMA | PUNCT-LEFT | PUNCT-RIGHT ;


# Nominal sets defined according to their lexical properties
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

LIST MANNU = "ådå-jak-#mánno" "ådåjakmánno" 
             "guovvamánno" 
             "snjuktjamánno" 
             "vuoratjismánno" 
             "moarmesmánno" 
             "biehtsemánno" 
             "snjilltjamánno" 
             "bårggemánno" 
             "ragátmánno" 
             "gålgådismánno" 
             "basádismánno" 
             "javllamánno" ;

 
LIST BEAIVI =	"mánnodak" "dijstak" "gasskavak" "duorastak"
		"bierjjedak" "lávvodak" "ájllek" "basse";



# Miscellaneous sets
# ------------------

#LIST Clt = Qst Foc ; 

LIST Px = PxSg1 PxSg2 PxSg3 PxDu1 PxDu2 PxDu3 PxPl1 PxPl2 PxPl3 ;



SET REALCLB = CLB - COMMA ;


# Border sets and their complements
# ---------------------------------

#SET CP = (Pron Interr) | (Pron Rel) | MANNE ;

#SET NP-BOUNDARY = BOS | EOS | REALCLB | VFIN | Inf | (Actio Ess) | ConNeg | VGen | 
#	Sup | PPRON-NOT-GEN | Recipr | Po | Pr | Pcle | ("jed") | Interj | CS | CP ;

 # CLB removed from set in order to allow for NP-internal commas.
 # Refl is removed because of "sin ieô¡¾aset vieruid" etc.


# Border sets and their complements
# ---------------------------------

SET CP = (Pron Interr) | (Pron Rel) ;


 
LIST SEMICOL = "\;" ;
LIST COL = ":" ;

SET S-BOUNDARY = (Pron Interr) | (Pron Rel) | ("muhto")  | CS | ("\;") | (":") ;
	# includes CP
	# remember that (",") and CC are potential sentence boundaries, too
	
SET S-BOUNDARY2 = (Pron Interr) | (Pron Rel) | ("muhto") |  CS | ("\;") | (":") | (@CC-VP) ;
	# includes CP
	# this one includes @CC-VP, the conjunction, which actually connects two sentences (each with a finite verb) to each other, and not @CC-NP, which coordinates internal NP-/AdvP-/AP ... coordination
	# To be used only AFTER the disambiguation of @CC-VP and @CC-NP taking place in the chapter right before "Disambiguatig pronouns"

SET NP-BOUNDARY = BOS | EOS | REALCLB | VFIN | Inf | (Actio Ess) | ConNeg | VGen | Sup | PPRON-NOT-GEN | Recipr | Po | Pr | Pcle | ("jed") | Interj | CS | CP ; 

SET SV-BOUNDARY = S-BOUNDARY | FMAINV ; # VFIN-NOT-AUX ; # should be V-MAIN linked to VFIN-aux to the left. (cg-3)
# This set is ment to use in rules for disambiguating due to verbs or verbsets. 
SET SV-BOUNDARY2 = S-BOUNDARY2 | FMAINV ;

SET SVF-BOUNDARY = S-BOUNDARY | VFIN ;
# This set is ment to use in rules for disambiguating due to verbs or verbsets. 
# Here we search for either an S-BOUNDARY or a finite verb, either aux or main.

SET CCCOMMA = CC | COMMA ;
	# remember that those are potential sentence boundaries, too
SET BOUNDARY = S-BOUNDARY OR NP-BOUNDARY ;

SET INTR = Rel  | PUNCT-LEFT ;
	# interrupters



# Syntactic sets
# --------------


LIST ALLSYNTAG = (@+FAUXV) (@+FMAINV) (@-FAUXV) (@-FMAINV) (@-FSUBJ)
                 (@ADV-A) (@ADV-ADV) (@ADVL) (@AN>) (@ActioN>) (@CC)
                 (@CMPND) (@CS) (@DN>) (@GA>) (@GN>) (@GP<) (@GP>)
                 (@HNOUN) (@INTERJ) (@MEASURE) (@NPron<) (@NQ<) 
                 (@NUM-PRON) (@OBJ) (@OPRED) (@PCLE) 
                 (@PCLE-COMPL) (@PROP>) (@PrcN>) (@PronN<) (@PronN>) 
                 (@QN<) (@QN>) (@SPRED)
                 (@SUBJ) (@SUBJ-QH) (@TITLE) (@VOC) (@X); # (@TIME)(@NUMBER) 

# SET ASSIGNEDSYN = ALLSYNTAG - @X ;
# funzt nicht.


# ============= #
# ============= #
# Mapping rules #
# ============= #
# ============= #
    MAPPINGS    #
# ============= #




# Mappings of minor categories
# ----------------------------

MAP (@CC-NP @CC-VP) TARGET CC ;
	## Na muhto don it leat dasa nama čállán!
# meaning: @CC-G @CC-L (global, local, i.e., inside and outside NP)
# mun liikon vuojadit ja viehkat @CC-NP
# mun lean bures ja johtilit vuodján. @CC-NP
# [S [NP mun] [VP [V vuoján] [AdvP bures ja johtilit]]]. @CC-NP
# @CC-NP, @CC-S

MAP (@CS) TARGET CS ;
	## Leago guhkes áigi dassá go Máreha oidnet?

MAP (@INTERJ) TARGET Interj ;
	## Maid, iigo leat boahtán?

MAP (@INTERJ) TARGET ("surgat") IF (-1 ("vuoi") OR ("hei"));
	## Vuoi surgat dan gándda!

MAP (@INTERJ) TARGET ("beargalat") IF (*-1 Nom BARRIER S-BOUNDARY LINK NOT 0 (Dem Nom));
	## Gosa don leat beargalat mu reaga dahkan?

MAP (@PCLE) TARGET Pcle ;
	## Amma mii eat leat máksán? 
MAP (@NNum<) TARGET ABBR IF (-1 Num)(0 INITIAL LINK NOT 1 NP-MEMBER);
  	## 98 B.
  	
MAP (@PROP>) TARGET ABBR IF (-1 (Prop Mal) OR (Prop Fem))(1 (Prop Sur));
	## Aslak A. Guttorm.  	

# Determiner mappings
# -------------------
# Attribute mappings
# ------------------
# Genitive mappings
# -----------------
# Quantifier mappings
# -------------------
# Fragment mappings
# -----------------
# Verb mappings
# -------------
# Complements of particles in comparison
# --------------------------------------
# Other special nominative mappings
# ---------------------------------
# Arguments and secondary predicates
# ----------------------------------

MAP (@OBJ) TARGET Acc ;
MAP (@ADVL) TARGET (Sg Com) IF (0 N);
MAP (@ADVL) TARGET (Pl Ill) IF (0 N);

# Adverbial mappings
# ------------------
# Default mapping
# ---------------



# ==================== #
# ==================== #
# Disambiguation rules #
# ==================== #
# ==================== #


# Rough outline of the plan.
# 0 same cohort
# 1 neighbour, early (1-2)
# subj-vfin in that order
# neg-conneg, in that order
# 
# 2 close, later
# the bulk here, ordered according to POS
# 3 everywhere, late

 
# =================================== #
# One-cohort disambiguation - cycle 0 #
# =================================== #
             CONSTRAINTS              #
# =================================== #

# This is for cases using the same cohort only.

    # ----------------- #
    # Table of Contents #
    # ----------------- #


# Lexicalised names
# -----------------



REMOVE ACR IF (0 Prop) ;


# Lexicalised derivations
# -----------------------
# SELECT instead of REMOVE if one wants to investigate word structure.

REMOVE (Der/lasj A Attr) IF (0 NOT-DER LINK 0 (A Attr));
	## bájkálasj
REMOVE (Der/lasj A Attr) IF (0 NOT-DER LINK 0 (N));

REMOVE N-DER IF (0 LEX-N LINK NOT 0 Ess);
 # Check!!!

REMOVE (V* Actor N Sg Nom) IF (0 NOT-ACTOR);


REMOVE N-DER IF (0 N-DER LINK 0 Ess)(0 LEX-N LINK 0 Ess)(NOT 0 Actio);
 # Removes N-DER if O is also a lexical noun, and both nouns are essive.
 # Check!!!

REMOVE A-DER IF (0 LEX-A);
REMOVE (V-DER Inf) IF (0 (NOT-DER Inf)); 






# ===================================== #
# Local disambiguation - cycles 1 and 2 #
# ===================================== #
# --------------------------------------------------------- #
# Cycle 1a: cases that will be needed in careful mode later #
# --------------------------------------------------------- #
                 CONSTRAINTS
# --------------------------------------------------------- #

# Possessive suffix

# PxSg1
#   V* TV Pass V PrfPrc          = V* TV Pass V* Actor N Sg Gen PxSg1
# = V* TV Pass V* Actio N Sg Nom = V* TV Pass V* Actor N Sg Acc PxSg1 
# = V* TV Pass V* Actor N Sg Nom PxSg1

# PxSg2
# V TV Inf = V* TV Actor N Sg Gen PxSg2 = V* TV Actor N Sg Nom PxSg2
#          = V* TV Actor N Sg Acc PxSg2 





# PxSg1
#   V* TV Pass V PrfPrc          = V* TV Pass V* Actor N Sg Gen PxSg1
# = V* TV Pass V* Actio N Sg Nom = V* TV Pass V* Actor N Sg Acc PxSg1 
# = V* TV Pass V* Actor N Sg Nom PxSg1

# PxSg2
# V TV Inf = V* TV Actor N Sg Gen PxSg2 = V* TV Actor N Sg Nom PxSg2
#          = V* TV Actor N Sg Acc PxSg2 

# PxSg3
# N Sg Ela = N Sg Acc PxSg3 = N Sg Gen PxSg3 ( = N Sg Nom PxSg3)
 
        
# PxSg3
# N Sg Ela = N Sg Acc PxSg3 = N Sg Gen PxSg3 ( = N Sg Nom PxSg3)
 
        
# ---------------------------------------------------------------- #
# Cycle 1b: removing the readings that were left from the 1a rules #
# ---------------------------------------------------------------- #
              CONSTRAINTS
# ---------------------------------------------------------------- #


# 1b is for finishing off the 1a leftovers.



# -------------------------------------------- #
# Cycle 2: Other cases of local disambiguation #
# -------------------------------------------- #
             CONSTRAINTS
# -------------------------------------------- #

# ImprtII
# -------

SELECT (ImprtII ConNeg Sg2) IF (*-1 (Neg ImprtII Sg2));
    ## Allu då dån tjállu!
SELECT (ImprtII ConNeg Sg3) IF (*-1 (Neg ImprtII Sg3));
    ## Allus tjále!

SELECT (ImprtII ConNeg Du1) IF (*-1 (Neg ImprtII Du1));
    ## Allun   tjále!                          
SELECT (ImprtII ConNeg Du2) IF (*-1 (Neg ImprtII Du2));
    ## Alluda då dåj tjállu!                          
SELECT (ImprtII ConNeg Du3) IF (*-1 (Neg ImprtII Du3));
    ## Alluska   tjále!                          
                                                      
SELECT (ImprtII ConNeg Pl1) IF (*-1 (Neg ImprtII Pl1));    
    ## Allup  tjále!                              
SELECT (ImprtII ConNeg Pl2) IF (*-1 (Neg ImprtII Pl2));    
    ## Allut dij tjállu!                              
SELECT (ImprtII ConNeg Pl3) IF (*-1 (Neg ImprtII Pl3));    
    ## Allusa  tjále!

# In case of poetry; Make sure that no Neg ImprtII is found to the right (!)
SELECT (ImprtII ConNeg Sg2) IF (*1 (Neg ImprtII Sg2) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Sg3) IF (*1 (Neg ImprtII Sg3) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Du1) IF (*1 (Neg ImprtII Du1) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Du2) IF (*1 (Neg ImprtII Du2) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Du3) IF (*1 (Neg ImprtII Du3) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Pl1) IF (*1 (Neg ImprtII Pl1) LINK *1 EOS BARRIER (ImprtII ConNeg));    
SELECT (ImprtII ConNeg Pl2) IF (*1 (Neg ImprtII Pl2) LINK *1 EOS BARRIER (ImprtII ConNeg));    
SELECT (ImprtII ConNeg Pl3) IF (*1 (Neg ImprtII Pl3) LINK *1 EOS BARRIER (ImprtII ConNeg));    

CONSTRAINTS

REMOVE (ImprtII ConNeg);


# Neg forms
# ---------

SELECT Neg IF (*1 ConNeg); # Probably needs a barrier.
    ## I galga Härrav

SELECT Neg IF (-1 ("jali" CC));
    ## Le jali ij!


# ConNeg forms
# ------------

# V Ind ConNeg = V Imprt ConNeg = V VGen = V Imprt Sg2 = V Ind Prs Sg2
 
SELECT (Imprt ConNeg) IF (*-1 (Neg Imprt) BARRIER VFIN OR ConNeg OR CS);


SELECT ConNeg IF (*-1 Neg BARRIER ConNeg);
	## Iv jållåra.
    ## Jubmel le aktidam, ij almasj galga tjuolldet.

# SELECT (Ind ConNeg) IF (*-1 (Neg Ind) BARRIER VFIN OR ConNeg OR PrfPrc OR CS OR CP)
# 	(NOT 0 N LINK *1 ConNeg BARRIER NOT-ADV-PCLE) <= noun lookalike
# 	(NOT 0 Loc LINK -1 (Neg Foc) LINK -1 Loc);    <= locative lookalike
	
SELECT (Imprt ConNeg) IF (-1 (Neg Imprt));
SELECT (Ind ConNeg) IF (-1 (Neg Prt) OR (Neg Prs));
SELECT (Neg Imprt) IF (1 (Imprt ConNeg));

# No Neg, no ConNeg.
REMOVE ConNeg IF (*-1 BOS OR CLB LINK *1 CS OR CLB BARRIER Neg); 
#REMOVE ConNeg IF (NOT *-1 Neg BARRIER CLB)(NOT *1 Neg BARRIER CLB);      

#bos clb    ij   conneg  clb  ... *conneg .. clb eos         
#clb obj , neg (kooridinerer) obj conneg   => conneg ok


CONSTRAINTS

# 1b is for finishing off the 1a leftovers.



# -------------------------------------------- #
# Cycle 2: Other cases of local disambiguation #
# -------------------------------------------- #
             CONSTRAINTS
# -------------------------------------------- #



# ImprtII
# -------

SELECT (ImprtII ConNeg Sg2) IF (*-1 (Neg ImprtII Sg2));
    ## Allu då dån tjállu!
SELECT (ImprtII ConNeg Sg3) IF (*-1 (Neg ImprtII Sg3));
    ## Allus tjále!

SELECT (ImprtII ConNeg Du1) IF (*-1 (Neg ImprtII Du1));
    ## Allun   tjále!                          
SELECT (ImprtII ConNeg Du2) IF (*-1 (Neg ImprtII Du2));
    ## Alluda då dåj tjállu!                          
SELECT (ImprtII ConNeg Du3) IF (*-1 (Neg ImprtII Du3));
    ## Alluska   tjále!                          
                                                      
SELECT (ImprtII ConNeg Pl1) IF (*-1 (Neg ImprtII Pl1));    
    ## Allup  tjále!                              
SELECT (ImprtII ConNeg Pl2) IF (*-1 (Neg ImprtII Pl2));    
    ## Allut dij tjállu!                              
SELECT (ImprtII ConNeg Pl3) IF (*-1 (Neg ImprtII Pl3));    
    ## Allusa  tjále!

# In case of poetry; Make sure that no Neg ImprtII is found to the right (!)
SELECT (ImprtII ConNeg Sg2) IF (*1 (Neg ImprtII Sg2) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Sg3) IF (*1 (Neg ImprtII Sg3) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Du1) IF (*1 (Neg ImprtII Du1) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Du2) IF (*1 (Neg ImprtII Du2) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Du3) IF (*1 (Neg ImprtII Du3) LINK *1 EOS BARRIER (ImprtII ConNeg));
SELECT (ImprtII ConNeg Pl1) IF (*1 (Neg ImprtII Pl1) LINK *1 EOS BARRIER (ImprtII ConNeg));    
SELECT (ImprtII ConNeg Pl2) IF (*1 (Neg ImprtII Pl2) LINK *1 EOS BARRIER (ImprtII ConNeg));    
SELECT (ImprtII ConNeg Pl3) IF (*1 (Neg ImprtII Pl3) LINK *1 EOS BARRIER (ImprtII ConNeg));    

CONSTRAINTS

REMOVE (ImprtII ConNeg);


# Neg forms
# ---------

SELECT Neg IF (1 ConNeg);
    ## I galga Härrav


# ConNeg forms
# ------------

# V Ind ConNeg = V Imprt ConNeg = V VGen = V Imprt Sg2 = V Ind Prs Sg2
 
SELECT (Imprt ConNeg) IF (*-1 (Neg Imprt) BARRIER VFIN OR ConNeg OR CS);


SELECT ConNeg IF (*-1 Neg BARRIER ConNeg);
	## Iv jållåra.
    ## Jubmel le aktidam, ij almasj galga tjuolldet.

# SELECT (Ind ConNeg) IF (*-1 (Neg Ind) BARRIER VFIN OR ConNeg OR PrfPrc OR CS OR CP)
# 	(NOT 0 N LINK *1 ConNeg BARRIER NOT-ADV-PCLE) <= noun lookalike
# 	(NOT 0 Loc LINK -1 (Neg Foc) LINK -1 Loc);    <= locative lookalike
	
SELECT (Imprt ConNeg) IF (-1 (Neg Imprt));
SELECT (Ind ConNeg) IF (-1 (Neg Prt) OR (Neg Prs));
SELECT (Neg Imprt) IF (1 (Imprt ConNeg));

# No Neg, no ConNeg.
REMOVE ConNeg IF (*-1 BOS OR CLB LINK *1 CLB BARRIER Neg); 
#REMOVE ConNeg IF (NOT *-1 Neg BARRIER CLB)(NOT *1 Neg BARRIER CLB);      

#bos clb    ij   conneg  clb  ... *conneg .. clb eos         
#clb obj , neg (kooridinerer) obj conneg   => conneg ok


CONSTRAINTS


# Subject-verb


# Sg1
# ---

# V Sg1 = Acc

SELECT (V Sg1) IF (*-1 (Pron Pers Sg1) BARRIER V);
	## Mån didjij javlav:

# Sg2
# ---

SELECT (V Sg2) IF (*-1 (Pron Sg2) BARRIER NOT-ADV) ;
	## Dån jållåra. Ahte dån farga jållårå.
		
REMOVE Dem IF (0 (Pron Pers Sg2))(1 (V Sg2));
	## Dån jållåra.
	
REMOVE (Imprt Sg2) IF (-1 (Pron Pers Sg2))(0 (Ind Prs Sg2));
	## Dån jållåra.

# Du1
# ---

SELECT Du1 IF (-1 (Pron Pers Du1 Nom))(0 (V Prt));
	## Måj båråjma ;

# Du2
# ---

SELECT Du2 IF (-1 (Pron Pers Du2 Nom))(0 (V Prt));
	## Dåj båråjda ;

SELECT Du2 IF (0 (Pron Pers Du2 Nom))(1 (V Du2));

# Pl1
# ---

SELECT Pl1 IF (-1 (Pron Pers Pl1 Nom))(0 (V Prt));
	## Mij båråjma ;

SELECT Pl1 IF (0 (Pron Pers Pl1 Nom))(1 (V Pl1));


# Pl2
# ---

SELECT Pl2 IF (-1 (Pron Pers Pl2 Nom))(0 (V Prt));
	## Dij båråjda ;

SELECT Pl2 IF (0 (Pron Pers Pl2 Nom))(1 (V Pl2));


# Adjectives
# ==========


# Attr pre-N
# ----------

SELECT Attr IF (0 (Prop Attr))(1 Mal OR Fem OR Sur);
	## Jesus Kristus

SELECT Attr IF (-1 V-NOT-AUX OR N)(0 A)(1 N);
	## Æjgádijda vaddá buorep diedojt.

REMOVE Attr IF (0 (Prop Nom) OR (Prop Gen))(NOT 1 N);
REMOVE Attr IF (0 (Prop Nom) OR (Prop Gen))(NOT 1 A LINK *1 N BARRIER NOT-ADJ);

REMOVE Attr IF (*1 VFIN BARRIER N);
	## Josef lij rievtesmielak, ittjij sidá suv hehpaduttet.

REMOVE Adv IF (-1 (Dem Com))(0 (A Attr))(1 (N Com));
	## dajna gjielgga rájájn.

REMOVE (A Sg Nom) IF (*-1 BOS OR LEFT OR CLB BARRIER NPNH)(1 N)(2 BOS OR RIGHT OR CLB);
	## (vijdes sisanujn)


# Case
# ====

# Genitive
# ========

# Gen after Num

SELECT (Sg Gen) IF (*-1 Num BARRIER NPNH);
	## Aktat ij buvte guokta härrä dievnnut.

# Gen in Spec
REMOVE (Pl Nom) IF (0 Prop)(*1 N BARRIER NOT-ADJ);

# Gen before Po

SELECT Gen IF (1C Po);
	## Profehta baktu.

# Rel or Interr

REMOVE Interr IF (NOT -1 BOS)(0 Rel);
REMOVE Interr IF (NOT -2 BOS)(-1 CC OR COMMA)(0 Rel);
REMOVE Interr IF (NOT -3 BOS)(-2 COMMA)(-1 CC)(0 Rel);

REMOVE Rel IF (*-1 BOS BARRIER N OR Pron OR Num OR A);


# Specific words
# ==============


# Adverbs
SELECT Adv IF (0 ("åvddål"))(1 CS) ;
	## åvddål gå lij bárnes.
	

# rádjáj
#SELECT Po #Awaiting a Po / Po Ill verdict.

# rájes

SELECT Po IF (*1 ("rádjáj" Po));
	## Fáô ëô ëgavuoda rájes Kristusa rádjáj.

# Proper nouns

# Johannes
SELECT ("Johannes") IF (1 ("gástadiddje"));
	## Johannes gástadiddje

# Valla
REMOVE ("Valla") IF (-1 BOS OR PUNCT OR ("." CLB))(NOT 1 V-SG3 LINK 1 (Pron Pers Sg3 Nom));
	## Valla Jesus sunji javlaj:

# Nouns

# gástadiddje
SELECT ("gástadiddje") IF (-1 ("Johannes"));

# miella
SELECT Ela IF (-1 Gen)(0 ("miella" N Sg Ela));
	## Valla suv mielas la na.

# jages
SELECT Ela IF (0 ("jahke" N Sg Ela))(1 ("jahke" N Sg Ill));
	## Jages jahkáj.

# Verbs

# bådij
# "båhte" N Pl Com  = "boahtet" V TV Ind Prt Sg3 = "båhte" N Pl Gen

# riegádij

SELECT (Ill) IF (1 ("riegádit" V)) ;
	## Serubbabelij riegádij Avihud.

	
# ============ #
# Noun or not? #
# ============ #

REMOVE V IF (-1C Attr)(0 N);
	## Álmmuk mij sjievnnejdin årru, le stuorra tjuovgav vuojnnám.


# ============ #
# Verb or not? #
# ============ #


# Ind Prt Sg3 vs N Pl Gen/Com

SELECT (Ind Prt Sg3) IF (-2 (Ind Prt Sg3))(-1 CC)(0 (N Pl Gen))(NOT 1 NPNH OR N);
    ## Ja de sijáv Betlehemaj rájaj ja javlaj:


SELECT (Ind Prt Sg3) IF (*-1 (Sg Nom) BARRIER NOT-ADV)(1 CC)(2 (Ind Prt Sg3));
    ## Valla Johannes nádoj ja javlaj:



# ====================== #
# Adjectives and adverbs #
# ====================== #

REMOVE Attr IF (1C V OR Pr OR Po OR Adv OR A OR EOS);
REMOVE Attr IF (1 COMMA)(NOT 2 (A Attr));
	## li ållo sáme, gudi mánnán sáme ságastin.

# ========================== #
# Disambiguating clitics     #
# ========================== #
# ========================== #
# Disambiguating numerals    #
# ========================== #
# ========================== #
# Disambiguating adpositions #
# ========================== #

SELECT Po IF (-1 Gen)(NOT *1 Gen BARRIER Attr OR CLB OR V OR CC OR CS);
    ## Nåv li buolva Abrahama fájes Davida rádjáj.
    
# =========================== #
# Disambiguating subjunctions #
# =========================== #
# =========================== #

REMOVE Pcle IF (-1 BOS OR CLB)(0 CS);
	##, de allit sunji åsko!


# ====================== #
# Disambiguating adverbs #
# ====================== #
# ====================== #


# ======================= #
# Disambiguating pronouns #
# ======================= #


# Personal pronouns

# Sg2

SELECT (Pron Pers Sg2 Nom) IF (-2 (V Sg2))(-1 ("gus" Pcle));
	## Le gus dån oahpes dán bájkkáj? 

SELECT (Sg2) IF (0 (Pron Pers))(*1 (V Sg2) BARRIER N);
	## Ja dån dal muv luse boadá.


# Genitive Sg = Accusative Sg for personal pronouns.
# Accusative vs. Genitive
# =======================

# Accusative is unique (-v), with one notable exception:
# Accusative = genitive for personal pronouns (big issue)

SELECT Gen IF (*-1 BOS OR CLB BARRIER NOT-ADV)(0 (Pron Pers))(*1 N BARRIER NOT-ADJ);
    ## Muv niejdda le jur jábmám.
    
SELECT Gen IF (NOT *-1 TV BARRIER CLB OR CS)(0 (Pron Pers))(1 Po OR N);
SELECT Gen IF (NOT *-1 TV BARRIER CLB OR CS)(0 (Pron Pers))(1 A LINK *1 N BARRIER NPNH);
    ## Go sijddasis jåvsådij, di bådijga tjalmedime suv åvddåj.     

SELECT Acc IF (-1 ("liehket"))(0 (Pron Pers))(1 TV);
    ## , ja boahtám lip suv guddnedittjat.

SELECT Acc IF (-1 V-MOOD)(0 (Pron Pers))(1 (TV Inf));
    ## , ittjij sidá suv hehpaduhttet.

SELECT Acc IF (-1 Neg)(0 (Pron Pers))(1 TV);
   ## Valla ittjij suv duohtada åvddål gå Maria lij bárnes giegádahttám.

# =================================== #
# Interrogative and relative pronouns #
# =================================== #

# Relative

SELECT Gen IF (0 Rel)(*1 N BARRIER NOT-ADJ LINK *1 V-SG3);

# Rel Sg Nom = Pers Pl1 Nom

SELECT (Pron Rel Sg Nom) IF (-1 N OR COMMA)(NOT *1 V-PL1);


# Demonstrative pronouns

REMOVE Par IF (0 (Pron Dem Sg Nom))(1 V-SG3);
    ## Divna dát sjattaj vaj lulu ålliduvvat mav Härrá lij profehta baktu javllam.


# =========== #
# Numerals
# ========
# ========================= #
# Disambiguating adjectives #
# ========================= #
# ========================= #
# Rules related to specific adjectives
# ====================================
# ============================= #
# Disambiguating verbs - part 1 #
# ============================= #
# ============================= #
# In this cycle we apply some safe verb rules.
# ConNeg forms
# ------------
# Need more advanced rule to select ConNeg when there is more
# material between Neg and ConNeg.
# Imperative
# ----------
# Infinitive
# ----------
# Inf or Imprt Pl2 or Der of different sorts.

SELECT Inf IF (*-1 INF-VERB);#BARRIER


# ==================== #
# Disambiguating nouns #
# ==================== #
       CONSTRAINTS     #
# ==================== #



#POS homonymy:
# Pron Interr = Pron Rel
# Adv Po

# ============ #
# Proper nouns #
# ============ #
# Prop or not
# -----------

# Prop Sg Nom or Gen Sg or Pl Nom
SELECT (N Prop Sg Nom) IF (-1 CS OR BOS)(*1 V-SG3 BARRIER NOT-ADV-PCLE);
    ## Maria lij bárnes riegádahttám.

# Prop Sg Gen or Pl Nom
REMOVE (N Prop Sg Nom) IF (-1 BOS)(1 N)(2 (V Sg3));
	## Nordlánda fulkkasuohkanin gullu gålmmå sámegiela.
# This must be too strong...




# Nouns versus adjectives
# =======================
# Nouns vs. verbs
# ======================


# ===== #
# Nouns #
# ===== #


# Case disambiguation
# ===================


# Nominative
# ==========

# Nom Sg = Gen Sg if no CG
# Nom Pl = Gen Sg systematically, cf. under Genitive below.

#REMOVE Gen IF (1 COMMA OR CC)(NOT 2 Gen);

# Nominative
# ==========

REMOVE (N Pl Nom) IF (*-1 BOS OR CLB OR CS BARRIER NPNH)(0 (N Sg Nom))(1 (V Sg3)) ;
REMOVE (N Sg Gen) IF (*-1 BOS OR CLB OR CS BARRIER NPNH)(0 (N Sg Nom))(1 (V Sg3)) ;
	## gå profehta le náv tjállám.

REMOVE (N Sg Gen) IF (-2 ADVLCASE)(-1 VFIN)(0 (N Sg Nom));
	## Hiskiaj riegádij Manasse.
SELECT (N Sg Nom) IF (*-1 Rel BARRIER NPNH)(*1 V-SG3 BARRIER NOT-ADV-PCLE LINK *1 CLB OR EOS BARRIER (N Sg Nom));
	## Dát sjattaj vaj luluj ålliduvvat mav Härrá lij profehta baktu javllam.

#REMOVE (N Sg Gen) IF (*-1 BOS OR CS BARRIER NPNH)(1 (V Ind Pl3) LINK NOT 0 Imprt OR ImprtII);
	## dan dihti go profehta le náv tjállám.

REMOVE (N Sg Gen) IF (*-1 BOS OR CS BARRIER (Pron Pers Du1))(0 (N Pl Nom))(1 (V Ind Pl3) LINK NOT 0 Imprt OR ImprtII);
# Genitive
# ========

# N Sg Gen = N Pl Nom
# -------------------

SELECT Gen IF (*-2 Nom)(-1 TV)(0 Sg)(*1 N BARRIER NOT-ADJ LINK 1 EOS);
    ## Mån basáv gusá muorra.

SELECT (Sg Gen) IF (*-1 (Dem Sg Gen) BARRIER NOT-ADJ);
    ## Dat lij dan ájgge gå álmmugav vuolgadin Babylonaj.
    
SELECT (Sg Gen) IF (0 Prop)(1 (N Nom) LINK NOT 0 Prop);
    ## Josef la Maria ålmåj.
        
SELECT (Sg Gen) IF (-1C Gen)(0C N)(1 N);
SELECT (Sg Gen) IF (-1 Gen)(0C N)(1 COMMA)(*2 N BARRIER NOT-ADJ);
    ## Davida bárne, Abrahama bárne máddo.

REMOVE (Pl Nom) IF (*-1 Num BARRIER NOT-ADJ);
	## gålmmå jage.

# N Sg Nom = N Sg Gen = N Pl Nom (cases without CG)
# -------------------------------------------------
# N Pl Gen = N Pl Com
# -------------------



# N Pl Gen = N Pl Com = N Sg Ill
# ------------------------------



# Illative
# ========

# Sg Ill = Pl Com =  Pl Gen (if no CG)

SELECT Ill IF (1 ILL-VERB LINK 1 Nom BARRIER NPNH);


# Inessive
# ========
# N Sg Ine = N Ess if no CG

# Elative
# ======= 

# Inessive
# ========
# N Sg Ine = N Ess if no CG


# N Sg Ela = N Sg Acc PxSg3 = N Sg Gen PxSg3

# Elative
# ======= 

# N Sg Ela = N Sg Acc PxSg3 = N Sg Gen PxSg3


# Comitative
# ==========

#REMOVE (N Pl Ine) IF 
# Essive
# ======

REMOVE Ine IF (*-1 ESS-VERB BARRIER Ess)(0 Ess);
	## Suv gåhttju Immanuelin.




# ============================= #
# Disambiguating verbs - part 1 #
# ============================= #
             CONSTRAINTS        #
# ============================= #

# Person
# ======

# Copula

SELECT Sg2 IF (*-1 (Pron Pers Sg2) BARRIER N);
SELECT Sg3 IF (*-1 (Pron Pers Sg3) BARRIER N);
SELECT Pl3 IF (*-1 (Pron Pers Pl3) BARRIER N);
    ## Sij le jåhtemin.

SELECT Pl3 IF (*-1C (N Pl Nom) BARRIER (Pron Pers Sg2 Nom) OR  (Pron Pers Sg3 Nom)
    OR (N Sg Nom));

    
SELECT Pl3 IF (*-1 (N Sg Nom) BARRIER (Pron Pers Sg2 Nom) OR  (Pron Pers Sg3 Nom)
    OR (N Sg Nom) LINK *-1 CC BARRIER NPNH LINK -1 (N Sg Nom));
    ## Anne ja Berit le jåhtemin.
    
REMOVE Sg2 IF (*-1 (N Sg Nom) OR (Rel Sg Nom) BARRIER (Pron Pers Sg2 Nom))(NOT 0 Neg);
REMOVE Pl3 IF (NOT *-1 (N Pl Nom))(*-1 (N Sg Nom) LINK NOT *-1 CC BARRIER NPNH LINK -1 (N Sg Nom));

# PrfPrc
# =======

SELECT PrfPrc IF (*-1 ("liehket" V) BARRIER V);
	## Dát sjattaj vaj luluj ålliduvvat mav Härrá lij profehta baktu javllam.

SELECT PrfPrc IF (-1 BOS)(*1 ("liehket") BARRIER NOT-ADV-PCLE) ;

# In this cycle we apply some safe verb rules.

# V TV Ind Prs Pl3 = V TV Ind Prt Sg2
# Adv = V Neg Prs Sg3 (the verb 'ij')
# V TV Ind ConNeg = V TV Imprt ConNeg = V TV VGen = V TV Imprt Sg2 = V TV Ind Prs Sg2
#  V TV Inf = V* TV Actor N Sg {Gen/Nom/Acc} PxSg2
# V Pot = V Prs Pl3

# Imperative
# ----------

    #  V TV Ind ConNeg=V TV Imprt ConNeg=V TV VGen=V TV Imprt Sg2
    # = V TV Ind Prs Sg2
 
    # V TV Ind ConNeg = V TV Imprt ConNeg = V TV VGen = V TV Imprt Sg2

    # V* TV Actor N Sg Gen = V TV Imprt Du2 = V* TV Actor N Pl Nom
    #= V* TV Actor N Sg Nom = V* TV Actor A Attr
  
    # V TV Inf = V TV Imprt Pl2
  
    # V TV Ind ConNeg = V TV Imprt ConNeg
 
    # V* TV Pass V VGen = V* TV Pass V Ind Prs Sg3 = V* TV Pass V Ind ConNeg
    #= V* TV Pass V Imprt Sg2 = V* TV Pass V Ind Prs Sg2 = V TV Ind Prs Sg3

REMOVE Imprt IF (0C Pass);
    ## Valla sunji ij goassak ándagi luojteduvá, guhti ájlis Vuoiô ëô ëanisáv álbet, ájnat siválattjan ihkeven sudduj bissu.
    
REMOVE Imprt IF (*-1 CS OR CP);
    ## Juohkka dåssjedis bágo åvdås, mav almasj tsuvkká, hähttu duobbmobiejven vásstedit.

REMOVE Imprt IF (*-1C (Neg Ind) BARRIER CLB OR V-IND-FIN);
    #Does not work yet but might work later
    
REMOVE Imprt IF (*-1 (Neg ImprtII) BARRIER CLB OR V-IND-FIN);
    
REMOVE Imprt IF (*-1C ConNeg BARRIER VFIN OR COMMA OR CS OR CP);
	## I galga Härráv, Jubmelat, gähttjalit. 


#REMOVE Imprt IF (-1 N OR A OR Po);
	#Imperative after N is possible 

REMOVE Imprt IF (*1C VFIN BARRIER NOT-ADV-PCLE OR CLB);
	## Tjalmme le rubmaha tjuovgga.
	## Dåppe buktin suv lusi gállnam ålmmåv guoddemlqtjo nanna vällahime.

SELECT Imprt IF (-1 BOS OR PUNCT OR REALCLB)(0 ("liehket"))(1 A);




#Adjective homonymy:
# A Attr = A Sg Nom


# NP-Internal

# Cycle 3

# Objects

# Adverbials

# ============================= #
# Disambiguating verbs - part 2 #
# ============================= #
             CONSTRAINTS        #
# ============================= #

        # Finite forms
        # Indicative or imperative
        # Verbs according to person and number
        # Rules for a special infinitive construction
        # More finite verbs
        # Passive
        # Non-finite verb forms
            # Infinitive
            # Present Participle
            # Actio/Perfect Participle
            # Imperative II (empty)
            # Verbgenitive
        # Selecting some more finite verbs
        # Lexical disambiguation of verbs
    # Residual cases
        # Case rules
        # Other rules for nouns and pronouns
        # Px rules
        # Determiners
        # Adverbs and adjectives

# Verbs according to person and number
# ====================================

# First person singular - Sg1
# ---------------------------
    # just ambiguity with respect to difference in derivational affixes and
    # possessive suffixes in deverbal nouns

# Second person singular - Sg2
# ----------------------------
    # Prt Sg2 = Prs Pl3
    # V TV ImprtII Sg2 = V TV ImprtII ConNeg Sg2 ?
    # V TV ImprtII ConNeg Pl2 = V* TV Pass V VGen = V* TV Pass V Ind Prs Sg2 
    # = V* TV Pass V Ind ConNeg = V* TV Pass V Ind Prs Sg3 ?
    # bále = V TV Imprt Sg2 = N Pl Nom = V TV Imprt ConNeg = N Sg Gen 
    # = V TV Ind ConNeg = V TV VGen
    # homonymy with derived verbs
    
SELECT (V Sg2) IF (-1 BOS)(1 ("gus" Pcle))(2 (Pron Pers Sg2 Nom));
	## Le gus dån oahpes dán bájkkáj?

# Third person singular - Sg3
# ---------------------------
    # Copula le is Sg3 = Sg2 = Pl3.

SELECT (V Sg3) IF (-1 BOS)(1 ("gus" Pcle))(2 (Pron Pers Sg3 Nom));
	## Le gus sån oahpes dán bájkkáj?


# First person dual - Du1
# -----------------------
    # Prs Du1 = Prt Pl3 "bårråt" "juhkat"
    # Prt Du1 = Prt Pl1
    # Imprt Du1 = N Ess ("mujttet" - "mujtto")

# Second person dual - Du2
# ------------------------
    # Prt Du2 = Prt Pl2
    
# Third person dual - Du3
# -----------------------

# First person plural - Pl1
# -------------------------
    # Prt Pl1 = Prt Du1

# Second person plural - Pl2
# --------------------------
     # Prt Pl2 =  Prt Du2

# Third person plural - Pl3
# -------------------------
    # Prt Pl3 = Prs Du1
    # Prt Sg2 = Prs Pl3

SELECT (V Pl3) IF (-1 BOS)(1 ("gus" Pcle))(2 (Pron Pers Pl3 Nom));
	## Le gus sij oahpes dán bájkkáj?

SELECT (V Pl3) IF (*-2 BOS OR CS BARRIER NPNH)(-1 (N Pl Nom))(0 VFIN);
	## Dan diehti go profehta le náv tjállam.


# ===================== #
# Global rules: cycle 4 #
# ===================== #
        CONSTRAINTS     #
# ===================== #

# Here we have some rules that scan the whole domain.
# We myst consider whether they should be integrated earlier or not.

# Late rules

SELECT VFIN IF (NOT *-1 VFIN BARRIER CLB)(NOT *1 VFIN BARRIER CLB);


