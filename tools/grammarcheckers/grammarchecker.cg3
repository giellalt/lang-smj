# -*- cg-pre-pipe: "hfst-tokenise -g ../../tools/tokenisers/tokeniser-gramcheck-gt-desc.pmhfst" -*-
# Divvun & Giellatekno - open source grammars for Sámi and other languages
# Copyright © 2000-2020 UiT The arctic University of Norway
# http://giellatekno.uit.no & http://divvun.no
#
# This program is free software; you can redistribute and/or modify
# this file under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version. The GNU General Public License
# is found at http://www.gnu.org/licenses/gpl.html. It is
# also available in the file $GTHOME/LICENSE.txt.
#
# Other licensing options are available upon request, please contact
# giellatekno@hum.uit.no or divvun@hum.uit.no

# ==================================================================== #
#!!       L U L E   S A A M I   G R A M M A R   C H E C K E R
# ==================================================================== #
# ====================================================================

#  Sámi language technology 2000-2020, UiT The arctic University of Norway #

# ---------------------- #
#   Development setup:   #
# ---------------------- #
#
# cd $GTHOME/langs/smj
# ./autogen.sh
# ./configure --enable-apertium --with-hfst --enable-syntax --enable-grammarchecker --enable-tokenisers --enable-alignment --enable-reversed-intersect
# make
# cd tools/grammarcheckers
# make dev
#
# ------------------------------ #
# TO TEST THE GRAMMARCHECKER DO:
# ------------------------------ #
#
# echo "valla soajttá tjáláv nágin bágojt gå ierit lav." | tools/grammarcheckers/modes/trace-smjgram-dev.mode
#
# ---------------------- #
#   Then edit/test as:   #
# ---------------------- #
#
# emacs grammarchecker.cg3  # and C-c C-i / C-c C-c if you have cg-mode installed
# echo "Sun ij puátá." | sh modes/smjgram.mode  # from the terminal
#
# ---------------------- #
#   Other debug-pipes:   #
# ---------------------- #
#
# ls modes/
#
# ---------------------- #

# The pipeline (but use modes, above)
# echo "Hei." | hfst-tokenise -g ../tokenisers/tokeniser-gramcheck-gt-desc.pmhfst | vislcg3 -g disambiguator.cg3 -t | vislcg3 -g grammarchecker.cg3 -t  

      # =========================================== #
      #      Short table of contents                #
      # =========================================== #

      # Delimiters
      # Tags and sets
      # Grammar checking rules
      
MAPPING-PREFIX = & ;

# =============== #
#!! # DELIMITERS
# =============== #

DELIMITERS = "<.>" "<!>" "<?>" "<...>" "<¶>" sent ;

# ================== #
#!! # TAGS AND SETS
# ================== #

SETS


#!! ## Tags


#!! This section lists all the tags inherited from the fst, and used as tags
#!! in the syntactic analysis. The next section, **Sets**, contains sets defined
#!! on the basis of the tags listed here, those set names are not visible in the output.



# Tags declared as single-membered LISTs
# ======================================

#!! ### Beginning and end of sentence
LIST BOS = (>>>) (<s>) ;  #!! BOS
LIST EOS = (<<<) (</s>) ; #!! EOS

# We define end of clause and beginning of clause in a way so that the file
# may be read both by the CG-2 and the vislcg formalisms.
# CG3 doesn´t function without >>> and <<< !


#!! ### Parts of speech tags

LIST N = N ;		    #!! N
LIST A = A ;		    #!! A
LIST Adv = Adv ;	    #!! Adv
LIST V = V ;		    #!! V
LIST Pron = Pron ;	    #!! Pron
LIST CS = CS ;		    #!! CS
LIST CC = CC ;		    #!! CC
SET CC-CS = CC OR CS ;  #!! CC-CS
LIST Po = Po ;		    #!! Po
LIST Pr = Pr ;		    #!! Pr
LIST Pcle = Pcle ;	    #!! Pcle
LIST Num = Num ;	    #!! Num
LIST Interj = Interj ;  #!! Interj
LIST ABBR = ABBR ;	    #!! ABBR
LIST ACR = ACR ;	    #!! ACR
LIST CLB = CLB ;	    #!! CLB
LIST LEFT = LEFT ;	    #!! LEFT
LIST RIGHT = RIGHT ;    #!! RIGHT
LIST WEB = WEB ;	    #!! WEB
LIST QMARK = """ ; # "  #!! QMARK
LIST PPUNCT = PUNCT ;   #!! PPUNCT
SET PUNCT = PPUNCT - QMARK ;  #!! PUNCT

LIST COMMA = "," ;  #!! COMMA
LIST ¶ = ¶;   #!! ¶

LIST v1 =  v1 ;
LIST v2 =  v2 ;
LIST v3 =  v3 ;


#!! ### Tags for POS sub-categories

LIST Pers = Pers ;	    #!! Pers
LIST Dem = Dem ;	    #!! Dem
LIST Interr = Interr ;  #!! Interr
LIST Indef = Indef ;    #!! Indef
LIST Recipr = Recipr ;  #!! Recipr
LIST Refl = Refl ;	    #!! Refl
LIST Rel = Rel ;	    #!! Rel
LIST Coll = Coll ;	    #!! Coll
LIST NomAg = NomAg ;    #!! NomAg
LIST Prop = Prop ;	    #!! Prop
LIST Allegro = Allegro ; #!! Allegro
LIST Arab = Arab ; #!! Arab
LIST Rom = Rom ; #!! Romertall

# Derivation
# ----------

LIST Der/adda = Der/adda ;
LIST Der/ahtti = Der/ahtti ;
LIST Der/alla = Der/alla ;
LIST Der/asti = Der/asti ;
LIST Der/easti = Der/easti ;
LIST Der/d = Der/d ;
LIST Der/eaddji = Der/eaddji ;
LIST Der/eamoš = Der/eamoš ;
LIST Der/amoš = Der/amoš ;
LIST Der/NomAct = Der/NomAct ;
LIST Der/geahtes = Der/geahtes ;
LIST Der/gielat = Der/gielat ;
LIST !better: = !better: ;
LIST Der/NuA = Der/NuA ;

LIST Der/h = Der/h ;
LIST Der/heapmi = Der/heapmi ;
LIST Der/hudda = Der/hudda ;
LIST Der/huhtti = Der/huhtti ;
LIST Der/huvva = Der/huvva ;
LIST Der/halla = Der/halla ;
LIST Der/j = Der/j ;
LIST Der/l = Der/l ;
LIST Der/lasj = Der/lasj ;
LIST Der/las = Der/las ;
LIST Der/hat = Der/hat ;

LIST Der/meahttun = Der/meahttun ;
LIST Der/muš = Der/muš ;
LIST Der/NomAct = Der/NomAct ;
LIST Der/st = Der/st ;
LIST Der/stuvva = Der/stuvva ;
LIST Der/upmi = Der/upmi ;
LIST Der/supmi = Der/supmi ;
LIST Der/vuota = Der/vuota ;
LIST Der/InchL = Der/InchL ;
LIST Der/Caus = Der/Caus ;

LIST Der/lágan = Der/lágan ;
LIST Der/lágán = Der/lágán ;
LIST Der/lágaš = Der/lágaš ;
LIST Der/jagáš = Der/jagáš ;
LIST Der/jahkásaš = Der/jahkásaš ;
LIST Der/diibmosaš = Der/diibmosaš ;
LIST Der/at = Der/at ;
LIST Der/AAdv = Der/AAdv ;


LIST Der/Dimin = Der/Dimin ;
LIST Der/viđá = Der/viđá ;
LIST Der/viđi = Der/viđi ;
LIST Der/veara = Der/veara ;
LIST Der/duohke = Der/duohke ;
LIST Der/duohkai = Der/duohkai ;
LIST Der/vuolle = Der/vuolle ;
LIST Der/vuollai = Der/vuollai ;
LIST Der/vuolde = Der/vuolde ;

LIST Der/NomAg = Der/NomAg ;
SET NOMAG = NomAg OR Der/NomAg ;
LIST G3 = G3 ;
LIST Gram/3syll = Gram/3syll ;
LIST Der/Comp = Der/Comp ;
LIST Der/Superl = Der/Superl ;

LIST Der/Pass = Der/PassL Der/PassS ;
LIST Der/PassL = Der/PassL ;
LIST Der/PassS = Der/PassS ;



#!! ### Tags for morphosyntactic properties

LIST Nom = Nom ; #!! Nom
LIST Acc = Acc ; #!! Acc
LIST Gen = Gen ; #!! Gen
LIST Ine = Ine ; #!! Gen
LIST Ela = Ela ; #!! Gen
LIST Ill = Ill ; #!! Ill
LIST Loc = Loc ; #!! Loc
LIST Com = Com ; #!! Com
LIST Ess = Ess ; #!! Ess
LIST Par = Par ; #!! Ess
LIST Sg = Sg ;   #!! Sg
LIST Du = Du ;   #!! Du
LIST Pl = Pl ;   #!! Pl
LIST Cmp/SplitR = Cmp/SplitR ;	   #!! Cmp/SplitR
LIST Cmp/SgNom = Cmp/SgNom ; #!! Cmp/SgNom Cmp/SgGen
LIST Cmp/SgGen = Cmp/SgGen ; #!! Cmp/SgGen
LIST PxSg1 = PxSg1 ;	   #!! PxSg1
LIST PxSg2 = PxSg2 ;	   #!! PxSg2
LIST PxSg3 = PxSg3 ;	   #!! PxSg3
LIST PxDu1 = PxDu1 ;	   #!! PxDu1
LIST PxDu2 = PxDu2 ;	   #!! PxDu2
LIST PxDu3 = PxDu3 ;	   #!! PxDu3
LIST PxPl1 = PxPl1 ;	   #!! PxPl1
LIST PxPl2 = PxPl2 ;	   #!! PxPl2
LIST PxPl3 = PxPl3 ;	   #!! PxPl3
LIST Px = PxSg1 PxSg2 PxSg3 PxDu1 PxDu2 PxDu3 PxPl1 PxPl2 PxPl3 ; #!! Px

LIST Comp = Comp Der/Comp ; #!! Comp, both for adverbs and adjectives
LIST Superl = Superl Der/Superl ; #!! Superl, both for adverbs and adjectives
LIST Attr = Attr ;		   #!! Attr
LIST Ord = Ord ;		   #!! Ord
LIST Qst = Qst ;		   #!! Qst
LIST IV = IV ; #!! IV
LIST TV = TV ; #!! TV
LIST Prt = Prt;				   #!! Prt
LIST Prs = Prs ;			   #!! Prs
LIST Ind = Ind ;			   #!! Ind
LIST Pot = Pot ;			   #!! Pot
LIST Cond = Cond ;			   #!! Cond
LIST Imprt = Imprt ;		   #!! Imprt
LIST ImprtII = ImprtII ;	   #!! ImprtII
LIST Sg1 = Sg1 (p1 sg) ;			   #!! Sg1
LIST Sg2 = Sg2 (p2 sg) ;			   #!! Sg2
LIST Sg3 = Sg3 (p3 sg) ;			   #!! Sg3
LIST Du1 = Du1 (p1 du) ;			   #!! Du1
LIST Du2 = Du2 (p2 du) ;			   #!! Du2
LIST Du3 = Du3 (p3 du) ;			   #!! Du3
LIST Pl1 = Pl1 (p1 pl) ;			   #!! Pl1
LIST Pl2 = Pl2 (p2 pl);			   #!! Pl2
LIST Pl3 = Pl3 (p3 pl);			   #!! Pl3
LIST Inf = Inf ;			   #!! Inf
LIST ConNeg = ConNeg ;		   #!! ConNeg
LIST Neg = Neg ;			   #!! Neg
LIST PrfPrc = PrfPrc ;		   #!! PrfPrc
LIST VGen = VGen ;			   #!! VGen
LIST PrsPrc = PrsPrc ;		   #!! PrsPrc
LIST Ger = Ger ;			   #!! Ger
LIST Sup = Sup ;			   #!! Sup
LIST Actio = Actio ;		   #!! Actio
LIST VAbess = VAbess ;		   #!! VAbess

SET TENSE-MARKER = Prs OR Prt ;



LIST Err/Orth = Err/Orth Err/Orth-a/á Err/Orth-nom/gen Err/Orth-nom/acc Err/DerSub Err/CmpSub Err/UnspaceCmp Err/HyphSub Err/SpaceCmp Err/Spellrelax err_orth_mt ; #!! Err/Orth



#!! ### Semantic tags

#LIST Sem/Act = Sem/Act ;				    #!! Sem/Act
#LIST Sem/Ani = Sem/Ani ;				    #!! Sem/Ani
#LIST Sem/Atr = Sem/Atr ;				    #!! Sem/Atr
#LIST Sem/Body = Sem/Body ;				    #!! Sem/Body
#LIST Sem/Clth = Sem/Clth ;				    #!! Sem/Clth
#LIST Sem/Domain = Sem/Domain ;			    #!! Sem/Domain
#LIST Sem/Feat-phys = Sem/Feat-phys ;	    #!! Sem/Feat-phys
#LIST Sem/Fem = Sem/Fem ;				    #!! Sem/Fem
#LIST Sem/Group = Sem/Group ;			    #!! Sem/Group
#LIST Sem/Lang = Sem/Lang ;				    #!! Sem/Lang
#LIST Sem/Mal = Sem/Mal ;				    #!! Sem/Mal
#LIST Sem/Measr = Sem/Measr ;			    #!! Sem/Measr
#LIST Sem/Money = Sem/Money ;			    #!! Sem/Money
#LIST Sem/Obj = Sem/Obj ;				    #!! Sem/Obj
#LIST Sem/Obj-el = Sem/Obj-el ;			    #!! Sem/Obj-el
#LIST Sem/Org = Sem/Org ;				    #!! Sem/Org
#LIST Sem/Perc-emo = Sem/Perc-emo ;		    #!! Sem/Perc-emo
#LIST Sem/Plc = Sem/Plc ;				    #!! Sem/Plc
#LIST Sem/Sign = Sem/Sign ;				    #!! Sem/Sign
#LIST Sem/State-sick = Sem/State-lang-sick ; #!! Sem/State-sick
#LIST Sem/Sur = Sem/Sur ;				    #!! Sem/Sur
#LIST Sem/Time = Sem/Time ;				    #!! Sem/Time
#LIST Sem/Txt = Sem/Txt ;				    #!! Sem/Txt




LIST Sem/Act = Sem/Act Sem/Act_Group Sem/Act_Plc Sem/Act_Route; #Activity #Ollet guhká dainna X-Com (Veaigin bisánasttii Ristenge geahččat, man guhkás Lemet-gázzi juo ledje ollen dainna divvunbargguin.) # bargu
LIST Sem/Adr = Sem/Adr ;
LIST Sem/Amount = Sem/Amount Sem/Amount_Build Sem/Amount_Semcon;
LIST Sem/Ani = Sem/Ani Sem/Ani-fish Sem/Ani_Build_Hum_Txt Sem/Ani_Buildpart Sem/Ani_Group Sem/Ani_Group_Hum Sem/Ani_Hum Sem/Ani_Hum_Plc Sem/Ani_Hum_Time Sem/Ani_Body-abstr_Hum Sem/Ani_Plc Sem/Ani_Plc_Txt Sem/Ani_Time Sem/Ani_Veh ; #Animal #bivdit X-Loc veahki.
LIST Sem/Ani-fish = Sem/Ani-fish ;
LIST Sem/Aniprod = Sem/Aniprod Sem/Aniprod_Hum
Sem/Aniprod_Obj-clo Sem/Aniprod_Perc-phys Sem/Aniprod_Plc ;
LIST Sem/Body = Sem/Body Sem/Body_Body-abstr Sem/Body_Clth Sem/Body_Food Sem/Body_Group_Hum Sem/Body_Group_Hum_Time Sem/Body_Hum Sem/Body_Mat Sem/Body_Measr Sem/Body_Obj_Tool-catch Sem/Body_Plc Sem/Body_Time ; #Body #Buohkat ceggejedje gieđa. Mon gal attán dutnje bealji vuollái. Go duos dás speččohallá bahtii de gal buollá bargomokta! Čuolda basttii sus alemii.
LIST Sem/Body-abstr = Sem/Ani_Body-abstr_Hum Sem/Body-abstr Sem/Body-abstr_Prod-audio_Semcon Sem/Body_Body-abstr ; # jierbmi, siellu, ...
LIST Sem/Build = Sem/Amount_Build Sem/Ani_Build Sem/Ani_Build_Hum_Txt Sem/Build Sem/Build_Buildpart Sem/Build_Clthpart Sem/Build_Edu_Org Sem/Build_Event_Org Sem/Build_Org Sem/Build_Route ; #Build #Sem #Syn: hukset X deike
LIST Sem/Build-room = Sem/Build-room ;
LIST Sem/Buildpart = Sem/Ani_Buildpart Sem/Buildpart Sem/Buildpart_Plc Sem/Build_Buildpart ; #Building part, e.g. room #Sem:+con,+count,-mova #Syn: mannat X sisa
LIST Sem/Cat = Sem/Cat ;
LIST Sem/Clth = Sem/Body_Clth Sem/Clth Sem/Clth_Hum ; #Clothes #Sem #bidjat X ala/badjelii.
LIST Sem/Clth-jewl = Sem/Clth-jewl Sem/Clth-jewl_Curr Sem/Clth-jewl_Curr_Obj Sem/Clth-jewl_Fruit Sem/Clth-jewl_Money Sem/Clth-jewl_Plant Sem/Org_Clth-jewl ; #Clothes jewelry #Synt: bidjat X ala. *bidjat X badjelii.
LIST Sem/Clthpart  = Sem/Build_Clthpart Sem/Clthpart  ;
LIST Sem/Ctain = Sem/Ctain Sem/Ctain_Feat-phys Sem/Ctain_Furn Sem/Ctain_Plc Sem/Ctain_Tool Sem/Ctain_Tool-measr ; #Container #Sem:+mova #Syn: bidjat juoidá X sisa
LIST Sem/Ctain-abstr = Sem/Ctain-abstr Sem/Ctain-abstr_Org ;
LIST Sem/Curr = Sem/Clth-jewl_Curr Sem/Curr Sem/Curr_Org; #Syn: Mun mávssan dasa 100 X. Dat máksá 100 X.
LIST Sem/Date = Sem/Date ;
LIST Sem/Dance = Sem/Dance Sem/Dance_Org Sem/Dance_Prod-audio ; #Ollugat dánso swinga lávddi ovddabeale.
LIST Sem/Dir = Sem/Dir ;
LIST Sem/Domain = Sem/Domain Sem/Domain_Food-med Sem/Domain_Prod-audio;
LIST Sem/Drink = Sem/Drink ;
LIST Sem/Edu = Sem/Build_Edu_Org Sem/Edu Sem/Edu_Event Sem/Edu_Group_Hum Sem/Edu_Hum Sem/Edu_Mat Sem/Edu_Org ; # vázzit X-Acc. addit X-Acc. X:s lea beroštupmi.
LIST Sem/Event = Sem/Build_Event_Org Sem/Edu_Event Sem/Event Sem/Event_Food Sem/Event_Hum Sem/Event_Plc Sem/Event_Plc-elevate Sem/Event_Time ; # X maŋŋel mun ferten vuolgit. X:s leat ollu olbmot. *Lean leamaš doppe X:Gen.
#LIST Sem/Feat-cogn = Sem/Feat-cogn ; # oaidnu, oamedovdu, viissisvuohta
LIST Sem/Feat = Sem/Feat Sem/Feat_Plant ; #many -vuohta and -dat nouns
LIST Sem/Feat-measr = Sem/Feat-measr ;
LIST Sem/Feat-phys = Sem/Ctain_Feat-phys Sem/Feat-phys Sem/Feat-phys_Tool-write Sem/Feat-phys_Veh Sem/Feat-phys_Wthr ;
LIST Sem/Feat-psych = Sem/Body-abstr_Feat-psych Sem/Feat-psych Sem/Feat-psych_Hum ; #not touchable, not countable ("beroštupmi" "gáđašvuohta" "mokta" "sáhkkiivuohta") - Mus lea X,  Son lea X-adj persovdna # muitu
LIST Sem/Fem = Sem/Fem ;
LIST Sem/Food = Sem/Body_Food Sem/Event_Food Sem/Food Sem/Food_Perc-phys Sem/Food_Plant ; #Syn: bassit/borrat/sohpat X-Acc. mon im læk borram dam guolest. mun boran iđitbiepmu. mus lea iđitbiebmu fárus. birgui borastuvvat
LIST Sem/Food-med = Sem/Domain_Food-med Sem/Food-med ;
LIST Sem/Fruit = Sem/Fruit Sem/Fruit_Plant ;
LIST Sem/Furn = Sem/Ctain_Furn Sem/Furn Sem/Food_Obj-surfc; #Syn: bidjat X vissui: čohkkedit X ala
LIST Sem/Game = Sem/Game Sem/Game_Obj-play ;
LIST Sem/Geom = Sem/Geom Sem/Geom_Obj ;
LIST Sem/Group = Sem/Act_Group Sem/Ani_Group Sem/Ani_Group_Hum Sem/Body_Group_Hum Sem/Body_Group_Hum_Time Sem/Edu_Group_Hum Sem/Group Sem/Group_Hum Sem/Group_Hum_Org Sem/Group_Hum_Plc Sem/Group_Hum_Prod-vis Sem/Group_Org Sem/Group_Sign Sem/Group_Txt ; #Bárdni lea riggámus sogas. -Plc
LIST Sem/Hum = Sem/Ani_Body-abstr_Hum Sem/Ani_Build_Hum_Txt Sem/Ani_Group_Hum Sem/Ani_Hum Sem/Ani_Hum_Plc Sem/Ani_Hum_Time Sem/Aniprod_Hum Sem/Body_Group_Hum Sem/Body_Hum Sem/Clth_Hum Sem/Edu_Group_Hum Sem/Event_Hum Sem/Feat-psych_Hum Sem/Group_Hum Sem/Body_Group_Hum_Time Sem/Group_Hum_Org Sem/Group_Hum_Plc Sem/Group_Hum_Prod-vis Sem/Hum Sem/Hum_Lang Sem/Hum_Lang_Plc Sem/Hum_Lang_Time Sem/Hum_Obj Sem/Hum_Org Sem/Hum_Plant Sem/Hum_Plc Sem/Hum_Sign Sem/Hum_Tool Sem/Hum_Veh Sem/Hum_Wthr ; #Human
#LIST Sem/Hum-kin = Sem/Hum-kin ; #Human kinship
LIST Sem/Hum-abstr = Sem/Hum-abstr ;
LIST Sem/Hum-prof = Sem/Hum-prof ;
LIST Sem/ID = Sem/ID ;
LIST Sem/Ideol = Sem/Ideol ;
LIST Sem/Lang = Sem/Hum_Lang Sem/Lang Sem/Lang_Tool ; #Syn: hállat X:illatiiva. Son hállá X:Acc. Jorgalan dán X:lokatiiva Y:illatiiva.
LIST Sem/Mal = Sem/Mal ;
LIST Sem/Mat = Sem/Body_Mat Sem/Edu_Mat Sem/Mat Sem/Mat_Plant Sem/Mat_Txt ; # Material #Sem: cannot pass through it without destroying it, ráhkadit juoidá X:s. Niibi lea X-Loc-Sg. #Dán báhkis šaddá čáppa gohppu.
LIST Sem/Measr = Sem/Body_Measr Sem/Measr Sem/Measr_Sign Sem/Measr_Time ; # Lea lassánan 100 X-Loc.
LIST Sem/Money = Sem/Clth-jewl_Money Sem/Money Sem/Money_Obj Sem/Money_Part Sem/Money_Txt ; #Mun mávssán X. Mii ávžžuhit vuovdit alimus X-Ill (haddái). ruhtadit doaibmabušeahtain. vuovdit/bidjat ruđast - selge for penger
LIST Sem/Obj = Sem/Body_Obj_Tool-catch Sem/Clth-jewl_Curr_Obj Sem/Geom_Obj Sem/Hum_Obj Sem/Money_Obj Sem/Obj Sem/Obj_Semcon Sem/Obj_State Sem/Obj_Veh ; # concrete object, movable #Syn: Mun guoskkán X-Acc. Dá livčče dutnje X-Nom (sabehat). čievččastit geađggi johkii
#LIST Sem/Obj-com = Sem/Obj-com ; #communication object #hálan telefuvnnas/e-poasttas #sádden X bokte
LIST Sem/Obj-clo = Sem/Aniprod_Obj-clo Sem/Obj-clo ; #bidjat juoidá Obj-clo sisa
LIST Sem/Obj-el = Sem/Obj-el ; # moveable, countable, touchable, electrical objects that can be turned on and of,  mus lea X alde, mun bijan X ala
LIST Sem/Obj-ling = Sem/Obj-ling Sem/Obj-ling_Obj-surfc ;
LIST Sem/Obj-play = Sem/Game_Obj-play Sem/Obj-play_Sport ;
LIST Sem/Obj-rope = Sem/Obj-rope ;
LIST Sem/Obj-surfc = Sem/Obj-surfc Sem/Obj-ling_Obj-surfc Sem/Food_Obj-surfc ;
LIST Sem/Org = Sem/Build_Edu_Org Sem/Build_Event_Org Sem/Build_Org Sem/Ctain-abstr_Org Sem/Curr_Org Sem/Dance_Org Sem/Edu_Org Sem/Group_Hum_Org Sem/Group_Org Sem/Hum_Org Sem/Org Sem/Org_Clth-jewl Sem/Org_Prod-cogn Sem/Org_Rule Sem/Org_Txt Sem/Org_Veh ;
LIST Sem/Part = Sem/Part Sem/Money_Part Sem/Part_Prod-cogn ; # bealli, oassi
LIST Sem/Perc-emo = Sem/Perc-emo Sem/Perc-emo_Wthr ; #Sem not touchable, not countable ("ballu" "suhttu" "vaši") -  Mun dovddan garra X. Mun lean X+Loc # moraš
LIST Sem/Perc-phys = Sem/Aniprod_Perc-phys Sem/Food_Perc-phys Sem/Perc-phys Sem/Perc-emo_Wthr ; # anistupmi, oaidnu
LIST Sem/Plant = Sem/Clth-jewl_Plant Sem/Ctain-clth_Plant Sem/Feat_Plant Sem/Food_Plant Sem/Fruit_Plant Sem/Hum_Plant Sem/Mat_Plant Sem/Plant Sem/Plant_Plantpart Sem/Plant_Tool Sem/Plant_Tool-measr ; #čáhccet X-Acc #X-Nom šaddet
LIST Sem/Plantpart = Sem/Plant_Plantpart Sem/Plantpart ; #čáhccet X-Acc #X-Nom šaddet
LIST Sem/Plc = Sem/Act_Plc Sem/Ani_Hum_Plc Sem/Ani_Plc Sem/Ani_Plc_Txt Sem/Aniprod_Plc Sem/Body_Plc Sem/Buildpart_Plc Sem/Ctain_Plc Sem/Event_Plc Sem/Event_Plc-elevate Sem/Feat-psych_Plc Sem/Group_Hum_Plc Sem/Hum_Lang_Plc Sem/Hum_Plc Sem/Plc Sem/Plc_Pos Sem/Plc_Route Sem/Plc_Semcon Sem/Plc_State Sem/Plc_Substnc Sem/Plc_Substnc_Wthr Sem/Plc_Time Sem/Plc_Tool-catch Sem/Plc_Wthr;
LIST Sem/Plc-abstr = Sem/Plc-abstr Sem/Plc-abstr_Rel_State Sem/Plc-abstr_Route ;
LIST Sem/Plc-elevate = Sem/Plc-elevate ;
LIST Sem/Plc-line = Sem/Plc-line ;
LIST Sem/Plc-water = Sem/Plc-water ;
LIST Sem/Pos = Sem/Plc_Pos Sem/Pos ; #Social position (job etc.)
LIST Sem/Prod = Sem/Prod ; #jáhkku
LIST Sem/Prod-audio = Sem/Body-abstr_Prod-audio_Semcon Sem/Dance_Prod-audio Sem/Domain_Prod-audio Sem/Prod-audio Sem/Prod-audio_Txt ; #attáldat
LIST Sem/Prod-cogn = Sem/Org_Prod-cogn Sem/Part_Prod-cogn Sem/Prod-cogn Sem/Prod-cogn_Txt ; # muittuhus, ipmárdus, jáhkku, osku, vuordámuš, viisodat? diehtu?
LIST Sem/Prod-ling = Sem/Prod-ling ;
LIST Sem/Prod-vis = Sem/Group_Hum_Prod-vis Sem/Prod-vis ;
LIST Sem/Rel = Sem/Plc-abstr_Rel_State Sem/Rel ;
LIST Sem/Route = Sem/Act_Route Sem/Build_Route Sem/Plc-abstr_Route Sem/Plc_Route Sem/Route ;
LIST Sem/Rule = Sem/Org_Rule Sem/Rule ; 
LIST Sem/Semcon = Sem/Amount_Semcon Sem/Body-abstr_Prod-audio_Semcon Sem/Obj_Semcon Sem/Plc_Semcon Sem/Semcon Sem/Semcon_Txt ; # semantic concept
LIST Sem/Sign = Sem/Group_Sign Sem/Hum_Sign Sem/Measr_Sign Sem/Obj_Sign Sem/Sign ;
LIST Sem/Sport = Sem/Obj-play_Sport Sem/Sport ;
LIST Sem/State = Sem/Plc-abstr_Rel_State Sem/Plc_State Sem/State Sem/State_Obj ; # lihkku, ipmilbalolašvuohta, mokta, váivi, váttisvuohta
LIST Sem/State-sick = Sem/State-sick Sem/State-sick_Substnc ;
LIST Sem/Substnc = Sem/Plc_Substnc Sem/Plc_Substnc_Wthr Sem/State-sick_Substnc Sem/Substnc Sem/Substnc_Wthr ; #Sem: can pass through it without destroying it
LIST Sem/Time = Sem/Ani_Hum_Time Sem/Ani_Time Sem/Body_Time Sem/Body_Group_Hum_Time Sem/Event_Time Sem/Hum_Lang_Time Sem/Measr_Time Sem/Plc_Time Sem/Time Sem/Time_Wthr ; 
LIST Sem/Time-clock = Sem/Time-clock ;
LIST Sem/Tool = Sem/Ctain_Tool Sem/Hum_Tool Sem/Lang_Tool Sem/Plant_Tool Sem/Tool ;
LIST Sem/Tool-catch = Sem/Body_Obj_Tool-catch Sem/Plc_Tool-catch Sem/Tool-catch ;
LIST Sem/Tool-clean = Sem/Tool-clean ;
LIST Sem/Tool-it = Sem/Tool-it ;
LIST Sem/Tool-measr = Sem/Ctain_Tool-measr Sem/Plant_Tool-measr Sem/Tool-measr ;
LIST Sem/Tool-music = Sem/Tool-music ;
LIST Sem/Tool-write = Sem/Feat-phys_Tool-write Sem/Tool-write ;
LIST Sem/Txt = Sem/Ani_Build_Hum_Txt Sem/Ani_Plc_Txt Sem/Group_Txt Sem/Mat_Txt Sem/Money_Txt Sem/Org_Txt Sem/Prod-audio_Txt Sem/Prod-cogn_Txt Sem/Semcon_Txt Sem/Txt ; #Syn: Čále dearvvuođaidat guossegirjámet! # das čuožžu
LIST Sem/Veh = Sem/Ani_Veh Sem/Ctain-clth_Veh Sem/Feat-phys_Veh Sem/Hum_Veh Sem/Obj_Veh Sem/Org_Veh Sem/Veh ;	#Syn: Vuolggán X:Com
#LIST Sem/Veh-cntain = Sem/Veh-cntain ; #Manan X sisa. #vuolggán X:Com.
LIST Sem/Wthr = Sem/Feat-phys_Wthr Sem/Hum_Wthr Sem/Perc-emo_Wthr Sem/Plc_Substnc_Wthr Sem/Plc_Wthr Sem/Substnc_Wthr Sem/Time_Wthr Sem/Wthr ; #Sem: Birget X:Ess. jietna gullui X-Loc (balvvas). Olgun/Odne lea + Wthr-Nom. ?Man ollu lea Wthr-Nom? Wthr-Gen maŋŋel boahtá X. Makkár lea dálki/siivu? #Ex: árvi, borga, muohtá, čoaskadálki, baján, bievla, bodnejiekŋa, bivdodálki, gasis, guoldu
LIST Sem/Wpn = Sem/Wpn ; #oaggut oaggunstákkuin, goddit X+Com
LIST Sem/Year = Sem/Year ;





LIST Sem/Sur = Sem/Sur ;
#LIST Tit = Tit ;

SET Sem/Human = Sem/Hum OR Sem/Hum-prof OR Sem/Sur OR Sem/Mal OR Sem/Fem OR Sem/Org ;
SET Sem/Animate = Sem/Hum OR Sem/Ani OR Sem/Sur OR Sem/Mal OR Sem/Fem OR Sem/Org ;
	# Has to be a set so that multiple tags are included
SET Sem/AnimateNotOrg = Sem/Hum OR Sem/Ani OR Sem/Sur OR Sem/Mal OR Sem/Fem ;
LIST Sem/Concrete-NotAnimate-NotPlace = Sem/Clth Sem/Clth-jewl Sem/Clthpart Sem/Ctain Sem/Drink Sem/Food Sem/Food-med Sem/Mat Sem/Money Sem/Obj Sem/Obj-clo Sem/Obj-el Sem/Substnc Sem/Tool Sem/Tool-catch Sem/Tool-measr Sem/Tool-music  Sem/Tool-write  Sem/Txt  Sem/Veh Sem/Wpn ; 
SET Sem/Place = Sem/Plc OR Sem/Plc-water OR Sem/Plc-elevate OR Sem/Plc-line OR Sem/Build OR Sem/Buildpart OR Sem/Org ;







LIST HUMAN = Sem/Fem Sem/Mal Sem/Sur ;	    #!! HUMAN

SET HAB-ACTOR = HUMAN ; # Goal: make this like the sme one. #!! HAB-ACTOR
SET HAB-ACTOR-NOT-HUMAN = Sem/Org ; # make this like the sme one #!! HAB-ACTOR-NOT-HUMAN


LIST PROP-ATTR = Sem/Mal Sem/Sur Sem/Fem ; #!! PROP-ATTR
LIST PROP-SUR = Sem/Sur Sem/Mal Sem/Fem ; #!! PROP-SUR



SET TIME-N-SET = N + Sem/Time ;  #!! TIME-N-SET


#!! ###  Syntactic tags

LIST @+FAUXV = @+FAUXV ;	         #!! @+FAUXV
LIST @+FMAINV = @+FMAINV ;	         #!! @+FMAINV
LIST @-FAUXV = @-FAUXV ;	         #!! @-FAUXV
LIST @-FMAINV = @-FMAINV ;	         #!! @-FMAINV
LIST @-FSUBJ> = @-FSUBJ> ;	         #!! @-FSUBJ>
LIST @-F<OBJ = @-F<OBJ ;	         #!! @-F<OBJ
LIST @-FOBJ> = @-FOBJ> ;	         #!! @-FOBJ>
LIST @SPRED<OBJ = @SPRED<OBJ ;       #!! @-FSPRED<OBJ
LIST @-F<ADVL = @-F<ADVL ;	         #!! @-F<ADVL
LIST @-FADVL> = @-FADVL> ;	         #!! @-FADVL>
LIST @-F<SPRED = @-F<SPRED ;         #!! @-F<SPRED
LIST @-F<OPRED = @-F<OPRED ;         #!! @-F<OPRED
LIST @-FSPRED> = @-FSPRED> ;         #!! @-FSPRED>
LIST @-FOPRED> = @-FOPRED> ;         #!! @-FOPRED>
SET FOBJ = @-F<OBJ OR @-FOBJ> ;
SET FMAINV = @-FMAINV OR @+FMAINV ;
SET FAUXV = @-FAUXV OR @+FAUXV ;
LIST @>ADVL = @>ADVL ;               #!! @>ADVL
LIST @ADVL< = @ADVL< ;               #!! @ADVL<
LIST @<ADVL = @<ADVL ;               #!! @<ADVL
LIST @ADVL> = @ADVL> ;               #!! @ADVL>
LIST ADVL = @ADVL @ADVL> @ADVL< @<ADVL @>ADVL @-F<ADVL @-FADVL> ;  #!! @ADVL
LIST @HAB> = @HAB> ;                    #!! @HAB>
LIST @<HAB = @<HAB ;                    #!! @<HAB
SET @HAB = @<HAB OR @HAB> ;
LIST @>N = @>N ;		      #!! @>N
LIST @Interj = @Interj ;    #!! @Interj
LIST @N< = @N< ;		      #!! @N<
LIST @>A = @>A ;		      #!! @>A
LIST @P< = @P< ;		      #!! @P<
LIST @>P = @>P ;		      #!! @>P
LIST @HNOUN = @HNOUN ;	      #!! @HNOUN
LIST @INTERJ = @INTERJ ;      #!! @INTERJ
LIST @>Num = @>Num;		      #!! @>Num
LIST @Pron< = @Pron< ;	      #!! @Pron<
LIST @>Pron = @>Pron ;	      #!! @>Pron
LIST @Num< = @Num< ;	      #!! @Num<
LIST @OBJ = @OBJ ;			  #!! @OBJ
LIST @<OBJ = @<OBJ ;		  #!! @<OBJ
LIST @OBJ> = @OBJ> ;		  #!! @OBJ>
LIST @OPRED = @OPRED ;		  #!! @OPRED
LIST @<OPRED = @<OPRED ;	  #!! @<OPRED
LIST @OPRED> = @OPRED> ;	  #!! @OPRED>
LIST @PCLE = @PCLE ;		  #!! @PCLE
LIST @COMP-CS< = @COMP-CS< ;  #!! @COMP-CS<
LIST @SPRED = @SPRED ;		  #!! @SPRED
LIST @<SPRED = @<SPRED ;	  #!! @<SPRED
LIST @SPRED> = @SPRED> ;	  #!! @SPRED>
LIST @SUBJ = @SUBJ ;		  #!! @SUBJ
LIST @<SUBJ = @<SUBJ ;		  #!! @<SUBJ
LIST @SUBJ> = @SUBJ> ;		  #!! @SUBJ>
SET SUBJ = @<SUBJ OR @SUBJ> OR @SUBJ ; #!! SUBJ
SET SPRED = @<SPRED OR @SPRED> OR @SPRED ; #!! SPRED
SET OPRED = @<OPRED OR @OPRED> OR @OPRED ; #!! OPRED
LIST @PPRED = @PPRED ;        #!! @PPRED
LIST @APP = @APP ;			   #!! @APP
LIST @APP-N< = @APP-N< ;	   #!! @APP-N<
LIST @APP-Pron< = @APP-Pron< ; #!! @APP-Pron<
LIST @APP>Pron = @APP>Pron ;   #!! @APP>Pron
LIST @APP-Num< = @APP-Num< ;   #!! @APP-Num<
LIST @APP-ADVL< = @APP-ADVL< ; #!! @APP-ADVL<
LIST @VOC = @VOC ;			   #!! @VOC
LIST @CVP = @CVP ;			   #!! @CVP
LIST @CNP = @CNP ;			   #!! @CNP
SET OBJ = (@<OBJ) OR (@OBJ>) OR (@OBJ) OR (@-F<OBJ) OR (@-FOBJ>) ; #!! OBJ
LIST <OBJ = @-F<OBJ @<OBJ ;     #!! <OBJ
LIST OBJ> = @OBJ> @-FOBJ> ;    #!! OBJ>
SET <OBJ-OTHERS = <OBJ OR (Gen) OR (Nom) OR (Ess) OR (Loc) OR (Adv) ; #!! <OBJ-OTHERS
SET OBJ>-OTHERS = OBJ> OR (Gen) OR (Nom) OR (Ess) OR (Loc) OR (Adv) ; #!! OBJ>-OTHERS
SET NOT-FAUXV = FMAINV OR OBJ + V OR ADVL + V ;
# Works after the mapping rules for verbs.
SET SYN-V = FMAINV OR FAUXV OR V + SUBJ OR OBJ + V OR ADVL + V OR (V @>N) OR (V @N<) OR (V @A<) ; #!! SYN-V
LIST @X = @X ;    #!! @X



# ========
  SETS
# ========


#!! ## Sets containing sets of lists and tags

#!! This part of the file lists a large number of sets based partly upon the tags defined above, and
#!! partly upon lexemes drawn from the lexicon.
#!! See the sourcefile itself to inspect the sets, what follows here is an overview of the set types.



#!! ### Sets for Single-word sets

LIST INITIAL = "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m"
        "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
        "á" "æ" "ø" "å" "ö" "ä" ; #!! INITIAL


#!! ### Sets for word or not

LIST WORD = N A Adv V Pron CS CC Po Pr Interj Pcle Num ABBR ACR  \? ; #!! WORD
 # any word
# SET REAL-WORD = WORD - Num - Ord ; #!! REAL-WORD
SET REAL-WORD-NOT-ABBR = WORD - Num - Ord - (ABBR N) ; # This is former REALWORD-NOTABBR #!! REAL-WORD-NOT-ABBR
SET NOT-COMMA = WORD - COMMA ;  #!! NOT-COMMA


#!! ### Case sets
# ---------

LIST ADVLCASE = Ill Loc Com Ess ; #!! ADLVCASE

LIST CASE-AGREEMENT = Nom Acc Gen (Pl Ill) Loc Com Ess ; #!! CASE-AGREEMENT
LIST CASE = Nom Acc Gen Ill Ela Ine Com Ess ; #!! CASE

SET NOT-NOM = CASE - Nom ; #!! NOT-NOM
SET NOT-GEN = CASE - Gen ; #!! NOT-GEN
SET NOT-ACC = CASE - Acc ; #!! NOT-ACC

#!! ### Verb sets
# ---------

# Verbs and their complements
# - - - - - - - - - - - - - -

SET NOT-V = WORD - V ; #!! NOT-V

#!! ### Sets for finiteness and mood
# - - - - - - - - - -

SET REAL-NEG = Neg - Sup ; #!! REAL-NEG

SET V-MOOD = Ind OR Pot OR Imprt OR ImprtII OR Cond OR (Neg Sup) ; 

SET VFIN = V-MOOD - ConNeg ;

LIST PUNCT-LEFT = (PUNCT LEFT) ;
LIST PUNCT-RIGHT = (PUNCT RIGHT) ;

SET PUNCT-LEFT-RIGHT = PUNCT-LEFT OR PUNCT-RIGHT ;


SET GRAMCHK-VFIN = V-MOOD - ConNeg - PUNCT-LEFT-RIGHT;


SET VFIN-POS = V-MOOD - ConNeg - Neg ;

SET VFIN-NOT-IMP = VFIN - Imprt ;

SET VFIN-NOT-NEG = VFIN - Neg ;
  # this might be to strict



SET NOT-PRFPRC = WORD - PrfPrc ; #!! NOT-PRFPRC


#!! ### Sets for person
# - - - -

LIST SG1-V = (V Sg1)  ; #!! SG1-V
LIST SG2-V = (V Sg2)  ;  #!! SG2-V
LIST SG3-V = (V Sg3)  ;  #!! SG3-V
LIST DU1-V = (V Du1)  ;  #!! DU1-V
LIST DU2-V = (V Du2)  ;  #!! DU2-V
LIST DU3-V = (V Du3)  ;  #!! DU3-V
LIST PL1-V = (V Pl1) ;   #!! PL1-V
LIST PL2-V = (V Pl2) ;   #!! PL2-V
LIST PL3-V = (V Pl3)  ;  #!! PL3-V

 # Note that imperative verbs are not included in these sets!

# Some subsets of the VFIN sets
# - - - - - - - - - - - - - - -
SET SG-V = SG1-V OR SG2-V OR SG3-V ;
SET DU-V = DU1-V OR DU2-V OR DU3-V ;
SET PL-V = PL1-V OR PL2-V OR PL3-V ;

SET DU-PL-V = DU1-V OR DU2-V OR DU3-V OR PL1-V OR PL2-V OR PL3-V ;

SET 1-2-V = SG1-V OR SG2-V OR DU1-V OR DU2-V OR PL1-V OR PL2-V ;

#!! ### Pronoun sets
# ------------

LIST MUN = (Pron Pers Sg1 Nom) (pers p1 sg nom) ;
LIST DON = (Pron Pers Sg2 Nom) (pers p2 sg nom) ;
LIST SON = (Pron Pers Sg3 Nom) (pers p3 sg nom) ;
LIST MOAI = (Pron Pers Du1 Nom) (pers p1 du nom) ;
LIST DOAI = (Pron Pers Du2 Nom) (pers p2 du nom) ;
LIST SOAI = (Pron Pers Du3 Nom) (pers p3 du nom) ;
LIST MII-PERS = (Pron Pers Pl1 Nom) (pers p1 pl nom) ;
LIST DII = (Pron Pers Pl2 Nom) (pers p2 pl nom) ;
LIST SII = (Pron Pers Pl3 Nom) (pers p3 pl nom) ;

SET PPRON-NOM-NOT-DAT = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;

SET PPRON-DU-PL = MOAI OR DOAI OR SOAI OR MII-PERS OR DII OR SII ;
SET PPRON-PL = MII-PERS OR DII OR SII ;

SET PRON-DU = MOAI OR DOAI OR SOAI ;

SET PPRON-NOT-SII = MUN OR DON OR SON OR MOAI OR DOAI OR SOAI OR MII-PERS OR DII ;

LIST PPRON-GEN = (Sg1 Gen) (Sg2 Gen) (Sg3 Gen) (Du1 Gen) (Du2 Gen) (Du3 Gen)
	(Pl1 Gen) (Pl2 Gen) (Pl3 Gen) (p1 sg gen) (p2 sg gen) (p3 sg gen) (p1 du gen) (p2 du gen) (p3 du gen)
	(p1 pl gen) (p2 pl gen) (p3 pl gen) ;

SET PPRON-NOT-GEN = (Pron Pers) - PPRON-GEN ;

LIST SG-DEM = (Pron Dem Sg Nom);
LIST PL-DEM = (Pron Dem Pl Nom);
SET NOT-DEM = WORD - Dem ;

LIST SG-PRON = (Pron Sg1) (Pron Sg2) (Pron Sg3) (Pron Sg) (Pron PxSg1) (Pron PxSg2) (Pron PxSg3) (pron p1 sg) (pron p2 sg) (pron p3 sg);
LIST DU-PRON = (Pron Du1) (Pron Du2) (Pron Du3)  (Pron PxDu1) (Pron PxDu2) (Pron PxDu3) (pron p1 du) (pron p2 du) (pron p3 du);
LIST PL-PRON = (Pron Pl1) (Pron Pl2) (Pron Pl3) (Pron Pl) (Pron PxPl1) (Pron PxPl2) (Pron PxPl3) (pron p1 pl) (pron p2 pl) (pron p3 pl);
LIST DU-PRON-NOTPX = (Pron Du1) (Pron Du2) (Pron Du3) (pron p1 du) (pron p2 du) (pron p3 du) ;


LIST FIRST-PX = PxSg1 PxDu1 PxPl1 ;
LIST SECOND-PX = PxSg2 PxDu2 PxPl2 ;
LIST THIRD-PX = PxSg3 PxDu3 PxPl3 ;

LIST SG-PX = PxSg1 PxSg2 PxSg3 ;
LIST DU-PX = PxDu1 PxDu2 PxDu3 ;
LIST PL-PX = PxPl1 PxPl2 PxPl3 ;

LIST PX = PxSg1 PxDu1 PxPl1 PxSg2 PxDu2 PxPl2 PxSg3 PxDu3 PxPl3 ;

LIST DU-NR = Du1 Du2 Du3 ;

SET NOT-SG-PRON = DU-PRON OR PL-PRON ;


#!! ### Adjectival sets and their complements
# -------------------------------------
SET A-CASE = A - Attr - Adv ;

LIST A-CC = A CC ;

SET NOT-A = WORD - A ; # This is former NOT-ADJ
SET NOT-A-COMMA = WORD - A - COMMA ;
SET NOT-Attr = WORD - Attr ;
SET NOT-A-PCLE = WORD - A - Pcle ;
SET NOT-A-CC = WORD - A-CC ;

 # and many others

#!! ### Adverbial sets and their complements
# ------------------------------------
SET LEX-ADV = Adv - (AA) ;

SET NOT-ADV-DE            = WORD - Adv ;
SET NOT-ADV            = NOT-ADV-DE OR CLB ;
SET NOT-ADV-N          = NOT-ADV - N;
SET NOT-ADV-PCLE       = NOT-ADV - Pcle ;
SET NOT-ADV-INDEF      = NOT-ADV - Indef ;
SET NOT-ADV-PCLE-ILL-LOC-COM = WORD - Adv - Pcle - Ill - Loc - Com;
SET NOT-A-ADV-PCLE = WORD - Pcle - A - Adv ; #



#!! ### Sets of elements with common syntactic behaviour
# ================================================

SETS

#!! ### NP sets defined according to their morphosyntactic features
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

LIST N-SG-NOM = (N Sg Nom);

LIST PROP = (N Prop);

SET COMMON-N = N - Prop;

SET HEAD-N = N - Cmp/SplitR ;

SET HEAD-N-NOM = (N Nom) - Cmp/SplitR ;

# SET SUBJECTHEAD = N OR A OR Pron - Refl ; # These, can be subject heads

SET NP = N OR A ;                      # anything that can take except numerals
SET NP-HEAD        = Pron OR HEAD-N ;
SET NP-HEAD-SG     = SG-PRON OR (N Sg) OR (A Sg) - Cmp/SplitR  ;
SET NP-HEAD-PL     = PL-PRON OR (N Pl) OR (A Pl) - Cmp/SplitR  ;
SET NP-HEAD-SG-NOM = SG-PRON + Nom OR (N Sg Nom) OR (A Sg Nom) - Cmp/SplitR ;
SET NP-HEAD-PL-NOM = PL-PRON + Nom OR (N Pl Nom) OR (N Coll Nom) OR (A Pl Nom) - Cmp/SplitR ;
SET NP-HEAD-NOM    = NP-HEAD-SG-NOM OR NP-HEAD-PL-NOM ;
SET NP-HEAD-ACC    = (Pron Acc) OR (N Acc) OR (A Acc) - Cmp/SplitR - (Dem Attr);
SET NP-HEAD-GEN    = (Pron Gen) OR (N Gen) OR (A Gen) - Cmp/SplitR - (Dem Attr)   ;

#!! ### The PRE-NP-HEAD family of sets

#!! These sets model noun phrases (NPs). The idea is to first define whatever can
#!! occur in front of the head of the NP, and thereafter negate that with the
#!! expression **WORD - premodifiers**.


SET PRE-NP-HEAD = (Prop Attr) OR (Prop @>N) OR (A Attr) OR (ABBR Attr)
         OR (Pron Pers Gen) OR (N Gen) OR
         Num OR Cmp/SplitR OR CC OR (Pron Dem) OR (Pron Refl Gen) OR (Indef Attr) OR
         (PrfPrc @>N) OR PrsPrc OR (A Ord) ;
         # The strict version of items that can only be premodifiers, not parts of the predicate

SET PRE-A-N     = (Pron Pers Gen) OR (Pron Pers Acc) OR (Pron Indef) OR Num OR (A Ord) OR (Pron Dem) OR (Pron Refl Gen) OR (Pron Refl Acc) ;

SET NOT-PRE-A-N = WORD - PRE-A-N ;

LIST PUNCT-LEFT = (PUNCT LEFT) ;
LIST PUNCT-RIGHT = (PUNCT RIGHT) ;



SET NOT-NPMOD     = WORD - PRE-NP-HEAD OR ABBR OR @CVP ;
# This is the previous NPNH (npnh) set.
# NOT-NPMOD  = "NOT-PRE-NP-HEAD"

SET NOT-NPMOD-ACC     = NOT-NPMOD - Acc OR ABBR ;
SET NOT-NPMOD-ACC-ADV     = NOT-NPMOD - Acc - Adv OR ABBR ;

SET NOT-NPMODADV    = WORD - PRE-NP-HEAD - Adv ;
SET NOT-NPMODADV-INDEF   = WORD - PRE-NP-HEAD - Adv - Indef ;


SET NOT-N = WORD - N ;

SET NOT-N-A = WORD - N - A ;

SET NOT-NP = Inf OR Pcle OR Interj OR CS ;

SET NUM = Num ;

SET NOT-NUM = WORD - Num ;

SET NOT-CC = WORD - CC ;

SET NOT-PCLE = WORD - Pcle ;


SET REAL-CLB = CLB - COMMA ;




#!! ### Border sets and their complements
# ---------------------------------

LIST MO = "gånnå" "gåggu" "goassa" "gåsi" "gåk" "gåktu" ("makkir láhkáj ládje" Adv) "makkár" "man" ("makkir" Pron Rel) "manen" "man" "mav" "mat" "mavga" ("nav" @CVP) (V Qst); # add more, work with this list

SET CP = (Pron Interr) OR (Pron Rel) ;

LIST BOUNDARYSYMBOLS =  "\;" ":" "-" "–" ;

SET S-BOUNDARY = BOUNDARYSYMBOLS OR (@CVP) ;

SET S-BOUNDARY-OPEN = S-BOUNDARY OR MO OR CS OR CC OR CP ;

SET BOC = S-BOUNDARY OR BOS ;
SET BOC-PUNCT = BOC - ("-") - ("–") ;
SET EOC = S-BOUNDARY OR EOS ;

SET NP-BOUNDARY = BOS OR EOS OR REAL-CLB OR Inf OR VGen OR Sup OR PPRON-NOT-GEN OR Recipr OR Po OR Pr OR Pcle OR Interj OR CS OR CP OR @CVP ;

SET SV-BOUNDARY = S-BOUNDARY OR Inf OR Sup OR FMAINV ;

SET CCCOMMA = CC OR COMMA ;
	# remember that those are potential sentence boundaries, too
	
	
 # Verbs
 # -----
 
# The set COPULAS is for predicative constructions
LIST COPULAS = "liehket" "soajttet" "sjaddat" ; # more need to be added




#!! Error tags

LIST &real-ActioGen-PrtPl1 = &real-ActioGen-PrtPl1;
LIST &real-PrsPl3-PrtSg3 = &real-PrsPl3-PrtSg3 ;
LIST &real-PrsSg2-PrsSg3 = &real-PrsSg2-PrsSg3 ;
LIST &real-PrtSg2-PrtSg3  = &real-PrtSg2-PrtSg3 ;
LIST real-ActioGen-PrtPl1 = real-ActioGen-PrtPl1 ; 


LIST &syn-subj-before-neg = &syn-subj-before-neg ;
LIST &msyn-sme_bastard_neg = &msyn-sme_bastard_neg ;
LIST &msyn-sme_bastard_neg2 = &msyn-sme_bastard_neg2 ;
LIST &msyn-soajttá-AUX = &msyn-soajttá-AUX ;
LIST &msyn-liehket-congr-condsg2-condpl3 = &msyn-liehket-congr-condsg2-condpl3 ;
LIST &msyn-congr-PrtSg3-PrsPl3 = &msyn-congr-PrtSg3-PrsPl3 ;
LIST &msyn-pred-attr = &msyn-pred-attr ;
LIST &msyn-numeral-attr = &msyn-numeral-attr ; 
LIST &msyn-numeral-accattr = &msyn-numeral-accattr ;
LIST &msyn-numeral-casecongr  = &msyn-numeral-casecongr ;
LIST &SUGGEST = &SUGGEST ;


LIST &err-agr = &err-agr ;
LIST &err-gen-po = &err-gen-po ;
LIST &err-no-conneg = &err-no-conneg ;
LIST &err-orrood-inf = &err-orrood-inf ;
LIST &err-ext-agr = &err-ext-agr ;
LIST &err-ext-vagr = &err-ext-vagr ;

SET &real = &real-ActioGen-PrtPl1 OR &real-PrsPl3-PrtSg3 OR &real-PrsSg2-PrsSg3 OR &real-PrtSg2-PrtSg3 OR real-ActioGen-PrtPl1 ;


SECTION

# Speller suggestions rule – add &SUGGESTWF to any spelling suggestion
# that we actually want to suggest to the user.
# The simplest is to just add it to all spelled words:
ADD:spell-it-all (&typo &SUGGESTWF) (<spelled>) ;
# But perhaps you want to only suggest spellings of words that are not inside "quotes":
ADD:spell-conservatively (&typo &SUGGESTWF) (<spelled>) IF (NEGATE -1 QMARK LINK 2 QMARK);

# # A simple grammar checker rule without suggestions: Ensure preceding nominal agrees with the verb
# ADD:err-agr (&err-agr) TARGET V IF (-1C Sg + Nom) (0 V) (NOT 0 Sg3);
# ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Sg1 + Nom) (0 V) (NOT 0 Sg1);
# ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Sg2 + Nom) (0 V) (NOT 0 Sg2);
# ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Pl1 + Nom) (0 V) (NOT 0 Pl1);
# ADD:err-agr (&err-agr) TARGET V IF (-1C Pron + Pl2 + Nom) (0 V) (NOT 0 Pl2);

# # And one with a suggestion where we simply change the tag Sg into Attr:
# ADD:attr-not-pred (&attr-not-pred) TARGET (A Sg) IF (NOT 0 Attr OR Gen) (1 CC LINK *1 COMMON-N) ;
# COPY:attr-not-pred (Attr &SUGGEST) EXCEPT (Sg) TARGET (&attr-not-pred) ;
# # The method is: Add &SUGGEST to a copied reading to *generate* a
# # suggestion form from that reading. The copy should contain the error
# # tag too – &-prefixed error tags are ignored when generating, but
# # used to create human-readable messages.

# Simple punctuation rules showing how to change the lemma in the suggestions:
ADD:use-guillemets (&guillemets) TARGET (""");
COPY:left-guillemet ("«" &SUGGEST) EXCEPT (""") TARGET (&guillemets) ;
COPY:right-guillemet ("»" &SUGGEST) EXCEPT (""") TARGET (&guillemets) ;

ADD:use-ellipsis (&ellipsis) TARGET ("...");
COPY:use-ellipsis ("…" &SUGGEST) EXCEPT ("...") TARGET (&ellipsis) ;

	# negation (sme pattern)
	# ----------------------
	# ittjiv diehtám/iv diehtám -> ittjiv diede
	
ADD:msyn-sme_bastard_neg (&msyn-sme_bastard_neg) TARGET ("ij" Neg Ind Prs) IF (*1 PrfPrc BARRIER NOT-ADV-PCLE - ("mige") - Acc) ;
    ## Ij riek sjaddam nav ahte bloggiv åvdep vahkko.
    ## ja iv vissjam basádit  åvddål gå lidjiv biesskedam
    ## valla danna iv dádjadum majdik ja ittjiv máhttám gähttjalimev dahkat
    ## Árjakluoven lij boadnjásj mij ittjij sidá hiejttet noajdástallamis ja	ij miededam	sån lij mejdek boasstot dahkam ,
    ## Gå ällobargge Jåhkåmåhkke gieldan	e adnám	vaj ålggorijkka viddnudahka ij galggam boahtet billat sijá lájddumijt
    ## Juska	ij mierredum	makkir vehkudagá máhtti ávkkiduvvat suodjalimguovlo sisbielen
    ## Muv plána lij Vuodnaj mannat bállov tjievtjatjit, valla ij navti sjaddam.
    ## Basecampa ij álggám nav buoret.

COPY:msyn-sme_bastard_neg (Prt &SUGGEST) EXCEPT (Prs) AFTER Ind TARGET (&msyn-sme_bastard_neg) ;

ADD:msyn-sme_bastard_neg2 (&msyn-sme_bastard_neg2) TARGET PrfPrc IF (*-1 ("ij" Neg Ind) BARRIER NOT-ADV-PCLE - ("mige") - Acc) ;

COPY:msyn-sme_bastard_neg2 (Der/PassL Ind ConNeg &SUGGEST) EXCEPT (Der/PassS PrfPrc &msyn-sme_bastard_neg2) TARGET (Der/PassS &msyn-sme_bastard_neg2) ;

COPY:msyn-sme_bastard_neg2 (Ind ConNeg &SUGGEST) EXCEPT (PrfPrc &msyn-sme_bastard_neg2) TARGET (&msyn-sme_bastard_neg2) ;


    # soajttá as an adverb
    # --------------------
    
LIST soajttet-Prt-Prs-VFIN = (Ind Prs Sg2 &msyn-soajttá-AUX) (Ind Prs Sg3 &msyn-soajttá-AUX) (Ind Prs Du1 &msyn-soajttá-AUX) (Ind Prs Du2 &msyn-soajttá-AUX) (Ind Prs Du3 &msyn-soajttá-AUX) (Ind Prs Pl1 &msyn-soajttá-AUX) (Ind Prs Pl2 &msyn-soajttá-AUX) (Ind Prs Pl3 &msyn-soajttá-AUX) (Ind Prt Sg1 &msyn-soajttá-AUX) (Ind Prt Sg2 &msyn-soajttá-AUX) (Ind Prt Sg3 &msyn-soajttá-AUX) (Ind Prt Du1 &msyn-soajttá-AUX) (Ind Prt Du2 &msyn-soajttá-AUX) (Ind Prt Du3 &msyn-soajttá-AUX) (Ind Prt Pl1 &msyn-soajttá-AUX) (Ind Prt Pl2 &msyn-soajttá-AUX) (Ind Prt Pl3 &msyn-soajttá-AUX);
    
ADD:msyn-soajttá-AUX (&msyn-soajttá-AUX) TARGET VFIN IF (*-1 ("soajttet" Prs Sg3) BARRIER S-BOUNDARY OR CS OR CC) ;
    ## valla soajttá {tjáláv} nágin bágojt gå ierit lav.
    ## EU soajttá {máhtti} mijáv viehkedit.
    
COPY:msyn-soajttá-AUX (Inf &SUGGEST) EXCEPT  soajttet-Prt-Prs-VFIN  TARGET (&msyn-soajttá-AUX) ;

    # agree with either subj or vfin pers
    
SET V-PERS = Sg1 OR Sg2 OR Sg3 OR Du1 OR Du2 OR Du3 OR Pl1 OR Pl2 OR Pl3 ;

ADD:msyn-soajttá-agree (&msyn-soajttá-agree) TARGET ("soajttet" V IV Ind Prs Sg3) IF (*1 VFIN BARRIER S-BOUNDARY OR CS OR CC) ;

COPY:msyn-soajttá-agree $$V-PERS + &SUGGEST EXCEPT (Sg3) TARGET (&msyn-soajttá-agree) IF (*1 VFIN + $$V-PERS BARRIER S-BOUNDARY OR CS OR CC) ;
    ## valla {soajttá} tjáláv nágin bágojt gå ierit lav.
    ## EU {soajttá} máhtti mijáv viehkedit.


    # Wrong Cond Sg2 instead of Pl3
    # -----------------------------

ADD:msyn-liehket-congr-condsg2-condpl3 (&msyn-liehket-congr-condsg2-condpl3) TARGET (Cond Sg2) IF (*-1 (N Nom Pl) OR (Pron Nom Pl) OR (Pron Nom Pl3) BARRIER NOT-ADV-PCLE ) ;
ADD:msyn-liehket-congr-condsg2-condpl3 (&msyn-liehket-congr-condsg2-condpl3) TARGET (Cond Sg2) IF (*-1 (N Nom Sg) BARRIER NOT-ADV-PCLE LINK *-1 CC BARRIER NOT-Attr LINK -1 (N Nom Sg) )  ;

    # vuorasulmutja lulu huvsov ja sujtov oadtjot.
    ## Árran ja UiT lulu aktisattjat barggat.

COPY:msyn-liehket-congr-condsg2-condpl3 (Pl3 &SUGGEST) EXCEPT (Sg2 &msyn-liehket-congr-condsg2-condpl3) TARGET (&msyn-liehket-congr-condsg2-condpl3) ;


    # Wrong Prt Sg3 instead of Prs Pl3
    # --------------------------------
    #Sij viehkedij mijáv dehkajt målssot
    #viehkedij > viehkedi
    
    
ADD:msyn-congr-PrtSg3-PrsPl3 (&msyn-congr-PrtSg3-PrsPl3) TARGET (Prt Sg3) IF (*-1 (N Nom Pl) OR (Pron Nom Pl) OR (Pron Nom Pl3) BARRIER NOT-ADV-PCLE LINK NOT 0 (Pron Nom Sg3) OR (N Nom Sg)) ;
Add:msyn-congr-PrtSg3-PrsPl3 (&msyn-congr-PrtSg3-PrsPl3) TARGET (Prt Sg3) IF (*-1 (Nom Sg) BARRIER NOT-ADV-PCLE LINK *-1 CC BARRIER NOT-Attr LINK -1 (Nom Sg) LINK *-1 (",") BARRIER NOT-Attr LINK -1 (Nom Sg)) ;

    ## Sij viehkedij mijáv dehkajt målssot
    ## Iŋŋgá, Linga ja Piera viehkedij mijáv dehkajt målssot
    ## Åhpadiddje gudi lij dibddám oahppijt ságastallamav jådedit , li åtsådallam oahppe le ålov oahppam ,
    ## 
    ## valla jus ulme lij ájnnasa oahppe åvddånibmáj le buoremus tjálalattjat .
    ## 
    ## Valla sij lij aj dat dárojduhttemájges bájnnidum .
    ##  javllá sån ja vuornnu sij lij nievres vuojtádalle .
    ##  
    ## Tore Johnsen subtsas Sáme girkkoráde gulldalij berustime mielajn daj åtsådallamijt majt sij lij oadtjum dán prosjevta baktu .
    ## 
    ## Vuojnnin ham sij munji lij åskelduvvam evangeliumav sárnnedit sidjij gudi älle birratjuohpaduvvam ,
    ## 
    ## Vaj dá dåjma lij moattelágátja le ájnas .
    ## 
    ## Verba soajtti årrot kårtå ma lij alega birrális jali kårtå máhtti lijmmiduvvat alek páhppárij .
    ## 
    ## Jaskugis boahtteájgge sáme gielajda gájbbet aj vaj suohkana ja bájkálasj_sebrudagá suodjalij ja åvddånbukti sáme gielajt ietjasa suorgen , 
    ## 
    ## Vuorasap máná aj dárbahij gærddomijt ja mujttádusájt 
    ## 
    ## Álggoálmmuga ålles væráldin gárvedij væráltkonferánssaj , ja divna 7 guovlo ájggu tjadádit gárvedimtjåhkanimijt åvddåla vuoratjismáno 2013.
    ## 
    ## Giellaguovdátja ásadij duojt dájt giellakursajt , ja tjadádi duojt dájt giellaprosjevtajt .
    
    
COPY:msyn-congr-PrtSg3-PrsPl3 (Prs Pl3 &SUGGEST) EXCEPT (Prt Sg3 &msyn-congr-PrtSg3-PrsPl3) TARGET (&msyn-congr-PrtSg3-PrsPl3) ;
   
   # lexical errors
   
   # Wrong use of oahpástuvvat with things and oahpásmuvvat with living creatures.
   #-------------------------------------------------------------------

ADD:lex-oahpástuvvat-oahpásmuvvat (&lex-oahpástuvvat-oahpásmuvvat) TARGET ("oahpástuvvat") IF (NOT *0 Sem/AnimateNotOrg + Com BARRIER NOT-ADV-PCLE)  ;
COPY:lex-oahpástuvvat-oahpásmuvvat ("oahpásmuvvat" &SUGGEST) EXCEPT ("oahpástuvvat" &lex-oahpástuvvat-oahpásmuvvat) TARGET (&lex-oahpástuvvat-oahpásmuvvat) ;
    ## dajna de la oahpástuvvam barggoiellemijn
    ## Sån la oahpástuvvam bijlajn
    ## Iŋŋgá l Cg3:ajn oahpástuvvam
    ## Ibbá l uddni åvddåskåvlåjn oahpástuvvam


ADD:lex-oahpásmuvvat-oahpástuvvat (&lex-oahpásmuvvat-oahpástuvvat) TARGET ("oahpásmuvvat") IF (*0 Sem/AnimateNotOrg + Ill BARRIER NOT-ADV-PCLE) ;
COPY:lex-oahpásmuvvat-oahpástuvvat ("oahpástuvvat" &SUGGEST) EXCEPT ("oahpásmuvvat" &lex-oahpásmuvvat-oahpástuvvat) TARGET (&lex-oahpásmuvvat-oahpástuvvat) ;
    ## Sån la oahpásmuvvam Iŋŋgáj

 
    # Case errors in valency settings
    # -------------------------------
ADD:msyn-com-ill-oahpástuvvat (&msyn-com-ill-oahpástuvvat) TARGET (Com) IF (*0 ("oahpásmuvvat") BARRIER NOT-ADV-PCLE) ;
COPY:msyn-com-ill-oahpástuvvat (Ill &SUGGEST) EXCEPT (Com &msyn-com-ill-oahpástuvvat) TARGET (&msyn-com-ill-oahpástuvvat) ;

    ## Sån la oahpásmuvvam skåvlåjn

ADD:msyn-ill-com-oahpásmuvvat (&msyn-ill-com-oahpásmuvvat) TARGET (Ill) IF (*0 ("oahpástuvvat") BARRIER NOT-ADV-PCLE) ;
COPY:msyn-ill-com-oahpásmuvvat (Com &SUGGEST) EXCEPT (Com &msyn-ill-com-oahpásmuvvat) TARGET (&msyn-ill-com-oahpásmuvvat) ;

    ## Sån la oahpástuvvam Iŋŋgáj
    


    # Pred when should be attr
    #--------------------------
    
ADD:msyn-pred-attr (&msyn-pred-attr) TARGET  A + Nom  IF (NEGATE 0 Attr) (*1 N + CASE OR A + CASE BARRIER (*) - (A Attr)) ;
COPY:msyn-pred-attr (Attr &SUGGEST) EXCEPT (Sg Nom &msyn-pred-attr) TARGET (&msyn-pred-attr) ;

    ## Mij tjuovojma {roaŋkok}  bálggáv
    #$ Galggi aj ájggeguovddelis ássjev åvddånbuktet {oajválattjajda} mij guosská vuorrasij iellemdilláj ja álkkádussaj.
    #$ Mån lav ávon ja mihá gå miján li dájddára guhti åvddånbukti mijá histåvråv.


    # Attr when should be pred
    #--------------------------
ADD:msyn-attr-pred (&msyn-attr-pred)  TARGET (A Attr) IF (1 EOS) ;

    ## ássje l {gássjelis} munji
    
    
    
    # mij instead of gut (all cases and persons, so also ma>gudi)
    #-------------------
    
    # relative use, gut for persons, mij for things

ADD:msyn-mij-gut (&msyn-mij-gut) TARGET ("mij") IF (*-1 (N Coll) OR (Sem/Hum) OR (Sem/Mal) OR (Sem/Fem) OR (Sem/Sur) OR (Pron Dem) OR (Pron Pers) OR (Pron Indef) BARRIER NOT-ADV-PCLE) ;

    ## Ja gåktu de manáj dáj guoktásijn {ma}£{gudi} galggin dunnuv viedtjat? OK
    ## ja lidjin ájn vil tjállám bårde nali, láhpav dajda ma maŋŋela båhti. OK
    ## Dá gåjt dal moattes ma båhtin ma lidjin lahka berraha,  OK
    ## Árjakluoven lij boadnjásj {mij}£{gut} ittjij sidá hiejttet noajdástallamis ja ittjij miededa sån lij mejdek boasstot dahkam. OK
    ## Men de bådij dåktår badjen mij máhtij tyskav sáhkadit OK
    ## {”Måske-aksjåvnnå}${conc-sk-ssk|Måsske-aksjåvnnå}” åtsåj rudájt, ja biedjin {ulmutjav virggáj mij}£{x|ulmutjav virggáj gut}

	# interrogative use
	
ADD:msyn-mij-gut (&msyn-mij-gut) TARGET ("mij" Nom) IF (*1 COPULAS BARRIER NOT-ADV-PCLE LINK *1 Sem/Hum + N BARRIER NOT-NPMOD) ;      
    ## lij dålåv dahkamin mij lij muv ráddna. Subj-interr-hum COPULA Spred-Hum
    
COPY:msyn-mij-gut ("guhti" &SUGGEST) EXCEPT ("mij" &msyn-mij-gut) TARGET (&msyn-mij-gut) ;  
    
    ## Åja, ma fáŋŋgaj lidjin váldedum? válldet fáŋŋgaj + OBJ-Hum
    ## Åja, ma lidjin váldedum fáŋŋgaj?    

ADD:msyn-pass-active (&msyn-pass-active) TARGET (Der/PassL) OR (Der/PassS) IF (1 ("mige" Acc));
COPY:msyn-pass-active (&SUGGEST) EXCEPT (Der/PassL &msyn-pass-active) OR (Der/PassS &msyn-pass-active) TARGET (&msyn-pass-active);

    ## Danna ittjiv dádjaduvá majdik
    ## mån ittjiv dádjaduvá majdik
    
 
 
    
     # Congr error with relative pron
     # -----------------------------
 
 SET NOT-BEFORE-REL = (*) - Inf - VFIN - COMMA - Po ;
 
ADD:msyn-congr-mij-ma (&msyn-congr-mij-ma) TARGET (Rel Nom Sg) IF (*-1 (N Pl) OR (Pron Pl) OR Pers - Sg1 - Sg2 - Sg3 BARRIER NOT-BEFORE-REL LINK NEGATE -1 VFIN OR Inf LINK -1 (N Sg) OR (Pron Sg));
 
    ## Valla mij gut lijma Vuonas vuolggám ejma davdiede. 
    ## Da gut ásadin æjvvalimev, lidjin dudálattja.
    ## Ulmutjijda guhti doarjodi báhtariddjijt.
    ## Galggi aj ájggeguovddelis ássjijt åvddånbuktet mij guosská vuorrasij iellemdilláj ja álkkádussaj
    ## Lejga giehttomin M.Gånågis Haraldij dajhásstalusáj birra mij duosstu vuoras sámijt.
    #$ Galggi aj ájggeguovddelis ássjev åvddånbuktet oajválattjajda mij guosská vuorrasij iellemdilláj ja álkkádussaj.
    
ADD:msyn-congr-mij-ma (&msyn-congr-mij-ma) TARGET (Rel Nom Sg) IF (*-1 (N Sg) BARRIER NOT-BEFORE-REL LINK *-1 Num - ("akta") BARRIER NOT-NPMOD ) ;
    
    ## Mij lip vihtta nuora guhti vuolggep dåhku.
    ## Da li gålmmå nuora gut 
    ## Galggi aj ájggeguovddelis ássjev åvddånbuktet oajválattjajda mij guosská vuorrasij iellemdilláj ja álkkádussaj
    ## Lejga giehttomin M.Gånågis Haraldij daj hásstalusáj birra mij duosstu vuoras sámijt
    ## Valla ietja vierttip plánajt dahkat mij vuoset majt ájggop dáj rudáj.
    ## Valla l aj ájnas duosstot dajt hásstalusájt mij varresvuodan ja máhtsastimen lulun gå ulmusj la sábme.
 
COPY:msyn-congr-mij-ma (Pl &SUGGEST) EXCEPT (Sg &msyn-congr-mij-ma) AFTER Rel TARGET (&msyn-congr-mij-ma) ;
     

    

    
    # real word error, missing j for -it verbs
    # ----------------------------------------
    
LIST IT-V = (".*it"r);


ADD:real-ActioGen-PrtPl1 (&real-ActioGen-PrtPl1) TARGET IT-V - Gram/3syll IF (0 (Actio Gen)) (NEGATE *0 VFIN BARRIER S-BOUNDARY-OPEN ) ; 

COPY:real-ActioGen-PrtPl1 (Ind Prt Pl1 &SUGGEST) EXCEPT (Actio Gen) TARGET (&real-ActioGen-PrtPl1) ;

    # mij hábbmima ådå njuolgadusáv; uddni bájttá biejvve.
    # viehkedima Lindav ådå goahtáj jåhtet
    
    
    # real word error, missing j for odd-syll -it verbs an "li"
    # ----------------------------------------

    # left subj
    
ADD:real-PrsPl3-PrtSg3 (&real-PrsPl3-PrtSg3) TARGET IT-V + Gram/3syll OR ( "liehket" )  IF (0 (Prs Pl3)) (*-1 (Pron Nom Sg3) OR (N Nom Sg) OR (Pron Nom Sg) LINK NEGATE *-1 CC BARRIER NOT-NPMOD LINK -1 (Nom Sg))  (NEGATE *1 (Pron Nom Pl3) OR (N Nom Pl))(NEGATE 0 (Prs Sg3)) ;

    ## Suv mielas sån li ilá materalistisk.
    ## Mij juo diehtep Hamsun nasistajt bælosti nuppát værálda doaron.
    #$ Suv mielas li skuvla ja girku ilá garrasat.
    #$ Ulmutja vuosedi son boahtá odne.

    # right subj
       
ADD:real-PrsPl3-PrtSg3 (&real-PrsPl3-PrtSg3) TARGET IT-V + Gram/3syll OR ( "liehket" )  IF (0 (Prs Pl3)) (*1 (Pron Nom Sg3) OR (N Nom Sg) OR (Pron Nom Sg) BARRIER NOT-NPMOD - Adv - Pcle LINK NEGATE 1 CC LINK *1 (Nom Sg) BARRIER NOT-NPMOD)  (NEGATE *-1 (Pron Nom Pl3) OR (N Nom Pl))(NEGATE 0 (Prs Sg3));

    ## Suv mielas li sån ilá materalistisk.
    #$ Suv mielas li Inga ja suv vielja ilá materialistisk.
    #$ Suv mielas Inga ja suv vielja li ....
    #$ Mån lav ávon ja mihá gå miján li dájddára guhti iåvddånbukti mijá histåvråv.
    
COPY:real-PrsPl3-PrtSg3 (Prt Sg3 &SUGGEST) EXCEPT (Prs Pl3) TARGET (&real-PrsPl3-PrtSg3) ;   





    
    ##    # real word error, missing j for "i"
    # -------------------------------------------------------------------

    # left subj

ADD:real-PrsSg2-PrsSg3 (&real-PrsSg2-PrsSg3) TARGET ( "ij" )  IF (0 (Prs Sg2)) (*-1 (Pron Nom Sg3) OR (N Nom Sg) OR (Pron Nom Sg) LINK NEGATE *-1 CC BARRIER NOT-NPMOD LINK -1 (Nom Sg))  (NEGATE *1 (Pron Nom Sg2)) (NEGATE 0 (Prs Sg3)) ;

    ## Åhpadiddje i dánna vuojga tjielggi mij la barggodahkamus.
    
    # right subj 

    ## i åhpadiddje dánna vuojga tjielggi mij la barggodahkamus.

ADD:real-PrsSg2-PrsSg3 (&real-PrsSg2-PrsSg3) TARGET ( "ij" )  IF (0 (Prs Sg2)) (*1 (Pron Nom Sg3) OR (N Nom Sg) OR (Pron Nom Sg) LINK NEGATE *1 CC BARRIER NOT-NPMOD LINK 1 (Nom Sg))  (NEGATE *-1 (Pron Nom Sg2)) (NEGATE 0 (Prs Sg3)) ;

COPY:real-PrsSg2-PrsSg3 (Sg3 &SUGGEST) EXCEPT (Sg2) TARGET (&real-PrsSg2-PrsSg3) ; 

 


    ##    # real word error, missing j for "ittji"
    # ----------------------------------------

    # left subj

ADD:real-PrtSg2-PrtSg3 (&real-PrtSg2-PrtSg3) TARGET ( "ij" )  IF (0 (Prt Sg2)) (*-1 (Pron Nom Sg3) OR (N Nom Sg) OR (Pron Nom Sg) LINK NEGATE *-1 CC BARRIER NOT-NPMOD LINK -1 (Nom Sg))  (NEGATE *1 (Pron Nom Sg2)) (NEGATE 0 (Prt Sg3)) ;

    ## Hamsun ittji sámijda lijkku
    ## valla dat ittji buoragit vuobde 

    # right subj

ADD:real-PrtSg2-PrtSg3 (&real-PrtSg2-PrtSg3) TARGET ( "ij" )  IF (0 (Prt Sg2)) (*1 (Pron Nom Sg3) OR (N Nom Sg) OR (Pron Nom Sg) LINK NEGATE *1 CC BARRIER NOT-NPMOD LINK 1 (Nom Sg))  (NEGATE *-1 (Pron Nom Sg2)) (NEGATE 0 (Prt Sg3)) ;

    ## ittji Hamsun sámijda lijkku
    ## valla ittji dat buoragit vuobde 



COPY:real-PrtSg2-PrtSg3 (Sg3 &SUGGEST) EXCEPT (Sg2) TARGET (&real-PrtSg2-PrtSg3) ; 

 
 
    ##    # real word error, extra j for neg
    
    
    # ----------------------------------------

    # left subj
    
ADD:real-negSg3-negSg2 (&real-negSg3-negSg2) TARGET ( "ij" )  IF (0 (Sg3)) (*-1 (Pron Nom Sg2) BARRIER S-BOUNDARY OR CS OR CC OR VFIN) ;

    ## dån ij galga iehtjádij sáhkadit hielles jali negatijva priváhta ássjij birra , ietján_gå lagámus fámilljaj .

    ## Juohkka lánndadikken gávnnu patiänntasiebrreráde mij galggá duv viehkedit jus dån ij dåbdå oasálasjvuodav duv sujton jali ietjáláhkáj illa sujtujn dudálasj .

    ## Jus dån huoman ij la visses , de máhtá suv válldet maŋen varresvuohtastasjåvnnåj viehkkitjit suv .

    ## dån ittjij boade guossáj. 
    
    #$ Duolla dån javla, dujna ij le ålmåj.
    #$ Hærrá Jesus Kristus, dån le javllam aktak ij boade Jubmela rijkkaj jus ij ådåsis riegáduvá tjátjes ja Vuojŋŋanisás.


    # right subj

ADD:real-negSg3-negSg2 (&real-negSg3-negSg2) TARGET ( "ij" )  IF (0 (Sg3)) (*1 (Pron Nom Sg2) BARRIER S-BOUNDARY OR CS OR CC OR VFIN) ;


COPY:real-negSg3-negSg2 (Sg2 &SUGGEST) EXCEPT (Sg3) TARGET  (&real-negSg3-negSg2) ;

   

    
    # Word order, neg before subject
    # ----------------------------------------
    
LIST SG-V-SUBJ = Sg Sg3 ;
LIST PL-V-SUBJ = Pl Pl3 ;  
LIST NEG-PRON = Foc/Neg-k ("nágin") ;
    
SET V-SUBJ-CONGR = SG-V-SUBJ OR PL-V-SUBJ ;

ADD:syn-subj-before-neg (&syn-subj-before-neg) TARGET Neg + $$V-PERS IF (*1 (Pron Nom) + $$V-PERS BARRIER NOT-NPMOD OR CC LINK NOT 0 NEG-PRON  OR ("ietja")) (*1 ConNeg BARRIER Rel OR Neg OR CS)  (*-1 CS OR Rel OR MO OR ("váj")) (NEGATE *1 ("?") LINK 1 EOS)  ;  
	#$ Oahppe e ietja diede.
    #$ Dile li sierraláhkáj, ja ij aktak åtsådallamijs máhte sirdeduvvat mekánalattjat sáme guovlojda. 
    
    ## ij vuoras áddjá vuojne tjállet -- Attr
    ## ij suv áddjá vuojne tjállet --- Pron Gen
    ## e guokta ádjá vuojne tjállet -- (Num Sg Nom)
    ## ij dát áddjá vuojne tjállet  -- Dem Pron Nom 
    ## ij nubbe áddjá -- Indef Pron Sg Nom 
    ## e moadda ádjá --- Indef Sg Nom
    ## ij vuostasj áddjá  Attr
    ## ij nieidda áddjá --- N Gen
    ## ij váiban áddjá --- PrfPrc
   
ADD:syn-subj-before-neg (&syn-subj-before-neg) TARGET Neg + Sg3 IF (*1 (N Sg Nom) BARRIER NOT-NPMOD OR CC) (*1 ConNeg BARRIER Rel OR Neg OR CS) (*-1 CS OR Rel OR MO OR ("váj")) (NEGATE *1 ("?") LINK 1 EOS) ;
	#$ Oslon le suohkanstivrraválgga ja stádaguovlloválgga, valla 	ij fylkadiggeválgga.  

ADD:syn-subj-before-neg (&syn-subj-before-neg) TARGET Neg + Pl3 IF (*1 (N Pl Nom) BARRIER NOT-NPMOD OR CC ) (*1 ConNeg BARRIER Rel OR Neg OR CS) (*-1 CS OR Rel OR MO OR ("váj")) (NEGATE *1 ("?") LINK 1 EOS) ; 

MOVE:syn-subj-before-neg &syn-subj-before-neg AFTER (*1 (N Nom) OR (Pron Nom) BARRIER NOT-NPMOD OR CC);

    ## gæhttjat vaj ittjij sámegiella tijmaj ålggolin gullu.
    ## sujna lej bierggo majna ittjij sån sidá dahkat gasskabiejvev.
    ## Sån lej sijdan gånnå ij áhttje málesta biebmov.
    #$ sån lej sijdan gånnå ij lim ållo biebbmo.
    #$ Dárogiella ij ga sámegiella le anon.

SET v = v1 OR v2 OR v3  ;


    # congruence case/ number
    # -----------------------

	 # Sg1 SUBJ

ADD:syn-number_congruence-subj-verb (&syn-number_congruence-subj-verb) TARGET (V Ind Prs) - ConNeg OR (V Ind Prt) - ConNeg OR (V Cond) OR (V Neg Ind) IF (*-1 (Pron Pers Sg1 Nom) BARRIER NOT-ADV-PCLE LINK NOT 0 @COMP-CS< LINK *-1 BOS OR (":") OR (";") OR ("/") OR ("‹") OR ("–") OR COMMA OR CS OR (Adv Subqst) OR (Pron Rel Sg) BARRIER NOT-ADV-PCLE)(NEGATE 0 Sg1 OR &real OR (N Sg) - Px OR Adv);
	## Mån la vuoras.
	## Mån ij la illastuvvam, valla jáhkáv muv sámevuohta l. Mun it 	leat sordojuvvon, muhto mun jáhkan ahte mu sámevuohta lea dan”
	## – Mån bargaMun barggat 	hirbmat olu, muhttun váhkkuid sáhtan roahkka bargat 40-50 diimmu, muitala Per Vidar.
	#$  Mun oainnát 	ballen dan áhkus, dat lávii ovtto bahádallat.
	## Mun boahtá deike.
    ## Valla ij la mån moaren dan diehti.
    ## Mån ij lav basádam ienep gå gålmmi-niellji.
    
COPY:syn-number_congruence-subj-verb (Sg1 &SUGGEST) EXCEPT Sg2 OR Sg3 OR Du1 OR Du2 OR Du3 OR Pl1 OR Pl2 OR Pl3 AFTER TENSE-MARKER TARGET (V Neg Ind &syn-number_congruence-subj-verb) OR (V Ind Prs &syn-number_congruence-subj-verb) OR (V Ind Prt &syn-number_congruence-subj-verb) IF (*-1 (Pron Pers Sg1 Nom) BARRIER NOT-ADV-PCLE LINK NOT 0 @COMP-CS< LINK *-1 BOS OR (":") OR (";") OR ("/") OR ("‹") OR ("–") OR COMMA OR CS OR (Adv Subqst) OR (Pron Rel Sg) BARRIER NOT-ADV-PCLE)(NEGATE 0 Sg1 OR &real OR (N Sg) - Px OR Adv);

	# post subj

ADD:syn-number_congruence-subj-verb (&syn-number_congruence-subj-verb) TARGET (V Ind Prs) - ConNeg OR (V Ind Prt) - ConNeg OR (V Cond) OR (V Neg Ind) IF (*1 (Pron Pers Sg1 Nom) BARRIER NOT-ADV-PCLE LINK NOT 0 @COMP-CS<)(NEGATE 0 Sg1 OR &real OR (N Sg) - Px OR Adv)(NEGATE *-1 (Pron Pers) - Sg1);	
	## 

ADD:syn-number_congruence-subj-verb (&syn-number_congruence-subj-verb) TARGET (V Neg Ind) IF (*1 (Pron Pers Sg1 Nom) BARRIER NOT-ADV-PCLE - ConNeg LINK NOT 0 @COMP-CS<)(NEGATE 0 Sg1 OR &real OR (N Sg) - Px OR Adv)(NEGATE *-1 (Pron Pers) - Sg1);	
	## Valla ij la mån moaren dan diehti!
	
COPY:syn-number_congruence-subj-verb (Sg1 &SUGGEST) EXCEPT Sg2 OR Sg3 OR Du1 OR Du2 OR Du3 OR Pl1 OR Pl2 OR Pl3  AFTER TENSE-MARKER TARGET (V Neg Ind &syn-number_congruence-subj-verb) OR (V Ind Prs &syn-number_congruence-subj-verb) OR (V Ind Prt &syn-number_congruence-subj-verb) IF (*1 (Pron Pers Sg1 Nom) BARRIER NOT-ADV-PCLE - ConNeg LINK NOT 0 @COMP-CS<)(NEGATE 0 Sg1 OR &real OR (N Sg) - Px OR Adv)(NEGATE *-1 (Pron Pers) - Sg1);
	

	 # Sg2 SUBJ

ADD:syn-number_congruence-subj-verb (&syn-number_congruence-subj-verb) TARGET (V Ind Prs) - ConNeg OR (V Ind Prt) - ConNeg OR (V Cond) OR (V Neg Ind) IF (*-1 (Pron Pers Sg2 Nom) BARRIER NOT-ADV-PCLE LINK NOT 0 @COMP-CS< LINK *-1 BOS OR (":") OR (";")  OR ("/") OR ("‹") OR ("–") OR COMMA OR CS OR CC OR (Adv Subqst) OR (Pron Rel Sg) BARRIER NOT-ADV-PCLE)(NEGATE 0 Sg2 OR ("leat" Pl1) OR &real OR (N Sg) - Px OR Adv);
	## Don boahtá deike.
	## Movt 	don lea 	vásihan ohppiid sámegielgeavaheami sin astoáiggis ja go ovttastallet ustibiiguin?
	##“ Gosa 	don lea 	vuolgán?
	##- Ja 	don logai 	ahte lea golbma vahkku áigi?
	#$ Go álo ja juohke ládje ásahusaid ráhkada aivve nu ahte sápmelaš álo go oaidná iežas eallinláibbi, de šaddá bávččas váimmuin váccašit ja geahččat gárddis maid dál galgá dás dahkat jus duon ja 	don galggašii 	vuovdit vai šaddá dáčča miela mielde.
	## Dat dovdu maid oažžu go 	don lea 	bargan juoidá buori, ja lea olbmuide addán juoidá, dat lea mu jođihanfápmu.
	## Dábálaš spiehkastat lei maid atnit goalmmát persovnna hámiid eará sojahanhámiid sajis, ovdamearkka dihte ná : ‹ Mun boahtá ›, ‹ moai lohká ›, ‹ 	don gomihii 	› ja ‹ mánát álggii ›, čilge Ijäs.
	## Songe lea guhkes mátkki dahkan min bealás, muhto ii oktage ádde maid 	don čilge 	.
	## It galgga dál maide ge váldit nu lossadit, earenoamážit jus veahá ártegis sánit bohtet dakkáris geasa 	don lea 	čadnojuvvon dovdduid bokte.
	## Ja dá lea dušše álgu go 	don lea 	váldán vuostá bestojumi Jesusis, dalle álgá dus vejolašvuohta fuobmát man stuora skeaŋka son lea.
	#$ Jierpmálaš olmmoš nu go 	don galggašii 	nagodit garvit jallodagaid.
	## Lihkus dát ii bistte nu guhká, ja 	don lea 	álo veahkkái go fal muhtin dárbbaša veahki ja go dus lea dilli.
	## Orruge leamen nu ahte 	don lea 	hoigadan iežat pessimisttalaš jurdagiid sidjiide.
	## Dat dovdu maid oažžu go 	don lea 	bargan juoidá buori, ja lea olbmuide addán juoidá, dat lea mu jođihanfápmu.
	## Dien njuolggadussii gal várra 	don ii 	liikoše, vai maid? DOES NOT WORK YET
	##– Oahpaheaddji, dal 	don lea 	fas seammá ládje dahkame.
	## Son ii ge leat čeavlá, i. It 	don livččii 	su doivon fyrstan, jus don it dieđe gii son lea, dadjá Trulsen.
	##– Mu váibmui gal 	don lea 	áigá juo fárren, it go luoittáše mu maid iežat váibmui. DOES NOT WORK YET
	## Neahttabáiki lea máidnosiid haga, ja dan 	don jođihuvvo 	Mánáid- ja nuoraid- ja bearašhálddašeapmi ( BUFA ), man Mánáid- ja bearašdepartemeanta lea diŋgon. DOES NOT WORK YET
	## Oaččun árviditÉ 	don lea 	oastán juvlafiellu. DOES NOT WORK YET
	## Dasa lassin ferte ráhkadit oanehaš fiila mii muitala makkár kodaid 	don geavaha 	vai oažžut sámegiel bustávaid. DOES NOT WORK YET
	## Juste dat ii oro nu váttis, go 	don lea 	čeahppi humahallat earáid dál.
	## Movt don čoavddát dán, lea dan duohken man duhtavaš 	don lea 	eallimiin ja man ollu návccaid don bijat dasa.

COPY:syn-number_congruence-subj-verb (Sg2 &SUGGEST) EXCEPT Sg1 OR Sg3 OR Du1 OR Du2 OR Du3 OR Pl1 OR Pl2 OR Pl3 OR ConNeg  BEFORE v TARGET (V Neg Ind &syn-number_congruence-subj-verb) OR (V Ind Prs &syn-number_congruence-subj-verb)  OR (V Ind Prt &syn-number_congruence-subj-verb) OR (V Cond &syn-number_congruence-subj-verb) OR (V Neg Ind &syn-number_congruence-subj-verb)  IF (*-1 (Pron Pers Sg2 Nom) BARRIER NOT-ADV-PCLE LINK NOT 0 @COMP-CS< LINK *-1 BOS OR (":") OR (";")  OR ("/") OR ("‹") OR ("–") OR COMMA OR CS OR CC OR (Adv Subqst) OR (Pron Rel Sg) BARRIER NOT-ADV-PCLE)(NEGATE 0 Sg2 OR ("leat" Pl1) OR &real OR (N Sg) - Px OR Adv);


	# Adpostitional phrase/object/genitive modifier sentence-initially

ADD:syn-number_congruence-subj-verb (&syn-number_congruence-subj-verb) TARGET (V Ind Prs) - ConNeg OR (V Ind Prt) - ConNeg OR (V Cond) OR (V Neg Ind) IF (*-1 (Pron Pers Sg2 Nom) BARRIER NOT-ADV-PCLE LINK -1 Po LINK -1 @>P LINK -1 BOS)(NEGATE 0 Sg2 OR ("leat" Pl1) OR &real OR (N Sg) - Px OR Adv);
	## Dan maŋŋá 	don fárrii 	fas Eŋglándii.

ADD:syn-number_congruence-subj-verb (&syn-number_congruence-subj-verb) TARGET (V Ind Prs) - ConNeg OR (V Ind Prt) - ConNeg OR (V Cond) OR (V Neg Ind) IF (*-1 (Pron Pers Sg2 Nom) BARRIER NOT-ADV-PCLE LINK -1 @OBJ> LINK *-1 BOS BARRIER NOT-NPMOD)(NEGATE 0 Sg2 OR ("leat" Pl1) OR &real OR (N Sg) - Px OR Adv);
	## Daid 	don bargá 	.
	## Maid 	don lea 	totne?


COPY:syn-number_congruence-subj-verb (Sg2 &SUGGEST) EXCEPT Sg1 OR Sg3 OR Du1 OR Du2 OR Du3 OR Pl1 OR Pl2 OR Pl3  BEFORE v TARGET (V Neg Ind &syn-number_congruence-subj-verb) OR (V Ind Prs &syn-number_congruence-subj-verb) OR (V Ind Prt &syn-number_congruence-subj-verb) OR (V Cond &syn-number_congruence-subj-verb) OR (V Neg Ind &syn-number_congruence-subj-verb)  IF (*-1 (Pron Pers Sg2 Nom) BARRIER NOT-ADV-PCLE LINK -1 Po LINK -1 @>P LINK -1 BOS)(NEGATE 0 Sg2 OR ("leat" Pl1) OR &real);



# numerals used as attributive adjectives
# --------------------------------------
# the noun from pl to sg.

ADD:msyn-numeral-accattr (&msyn-numeral-accattr) TARGET (N Pl Acc) IF (*-1 Num BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom) ) ;

ADD:msyn-numeral-accattr (&msyn-numeral-accattr) TARGET (N Pl Acc) IF (*-1 (A Attr) LINK NOT 0 (N Coll Nom) LINK -1 CC LINK -1 (A Attr) LINK NOT 0 (N Coll Nom) LINK -1 Num) ;

COPY:msyn-numeral-accattr (Sg Gen &SUGGEST) EXCEPT (Pl Acc &msyn-numeral-accattr) TARGET (&msyn-numeral-accattr) ;

    ## vuojnáv guokta gusájt > vuojnáv guokta gusá insead of vuojnáv guokta guosáv

ADD:msyn-numeral-attr (&msyn-numeral-attr) TARGET (N Pl) IF (NOT 0 &msyn-numeral-accattr) (*-1 Num BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;

    ## Mån lav åhtsåm guokta universitehtajda = guovte universitiehttaj
    ## Ælla des dagu åvddål guovte sierra skåvllåhuodnahijda sieradum. = guovte sierra skåvllåhuodnahij
    ## Sån gatjádij låge ulmutjijs sijá alkohåvlådábij birra.
    #$ De vuolggeba da guovtes stuorra universitehtajda.

ADD:msyn-numeral-attr (&msyn-numeral-attr) TARGET (N Pl) IF (NOT 0 &msyn-numeral-accattr) (*-1 (A Attr) LINK NOT 0 (N Coll Nom) LINK -1 CC LINK -1 (A Attr) LINK NOT 0 (N Coll Nom) LINK -1 Num) ;

    ## Mån lav åhtsåm guokta ruoppsis ja fijna universitehtajda.

COPY:msyn-numeral-attr (Sg &SUGGEST) EXCEPT (Pl &msyn-numeral-attr) BEFORE CASE TARGET (&msyn-numeral-attr)  ;




# Numeral case congruence
# -----------------------
# fixes case of the numerals 

ADD:msyn-numeral-casecongr (&msyn-numeral-casecongr) TARGET (Num Sg Nom) OR (Num Sg Acc) IF (*1 (N Pl) +  &msyn-numeral-attr OR (N Pl) +  &msyn-numeral-accattr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom) LINK NOT 0 Acc) ;

COPY:msyn-numeral-casecongr (Sg Gen &SUGGEST) EXCEPT (Sg Nom &msyn-numeral-casecongr) OR (Sg Acc &msyn-numeral-casecongr)  TARGET (&msyn-numeral-casecongr) IF (*1 (N Pl Ill) +  &msyn-numeral-attr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;
    
    ## Vattáv suojnijt guokta>guovte gusájda
    
COPY:msyn-numeral-casecongr (Sg Com &SUGGEST) EXCEPT (Sg Nom &msyn-numeral-casecongr) OR (Sg Gen &msyn-numeral-casecongr)  TARGET (&msyn-numeral-casecongr) IF (*1 (N Pl Com) +  &msyn-numeral-attr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;

    ## manáv judosdåktårij guokta>guovtijn gusáj
    
COPY:msyn-numeral-casecongr (Sg Ine &SUGGEST) EXCEPT (Sg Nom &msyn-numeral-casecongr) OR (Sg Gen &msyn-numeral-casecongr)  TARGET (&msyn-numeral-casecongr) IF (*1 (N Pl Ine) +  &msyn-numeral-attr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;

    ## guokta>guovten gusájn li báktjasa

	# special case Acc
	# - - - - - - - - -    

ADD:msyn-numeral-acccasecongr (&msyn-numeral-acccasecongr) TARGET (Num Sg Nom) OR (Num Sg Acc) IF (0 ("<.*v>"r))(*1 (N Pl Acc) +  &msyn-numeral-attr OR (N Pl Acc) +  &msyn-numeral-accattr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;

COPY:msyn-numeral-acccasecongr (Sg Nom &SUGGEST) EXCEPT (Sg Acc &msyn-numeral-acccasecongr) OR (Sg Gen &msyn-numeral-acccasecongr)  TARGET (&msyn-numeral-acccasecongr) + ("<.*v>"r) IF (*1 (N Pl Acc) +  &msyn-numeral-accattr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;

    # vuojnáv guovtev>guokta gusájt
    
    # special case Par
    # - - - - - - - - -

ADD:msyn-numeral-parcasecongr (&msyn-numeral-parcasecongr) TARGET (Num Sg Nom) OR (Num Sg Acc) OR (Num Pl Nom) OR (Num Sg Gen) IF (*1 (N Pl) +  &msyn-numeral-attr OR (N Pl) +  &msyn-numeral-accattr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom) LINK NOT 0 Acc) ;

COPY:msyn-numeral-parcasecongr (Sg Par &SUGGEST) EXCEPT (Sg Nom &msyn-numeral-parcasecongr) OR (Pl Nom &msyn-numeral-parcasecongr) OR (Sg Gen &msyn-numeral-parcasecongr) TARGET (&msyn-numeral-parcasecongr) IF (*1 (N Pl Ela) +  &msyn-numeral-attr BARRIER (*) - (A Attr) LINK NOT 0 (N Coll Nom)) ;
    
    ## Oattjov mielkev guokta/guovte>guovtet gusájs

	#$ Magdalena Normann fotoateliajt Korsnesan dåjmadij 1910-20 jagijn, ja sjattaj viehka dåbdos gåvvår. 