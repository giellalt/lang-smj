#!/bin/sh

# Converts SMJ texts written following NO conventions and variants to one which
# follows SE conventions and variants. It uses the TTS text processing pipeline
# in combination with the grammar checker generator. To run it, you need to
# build SMJ with the following configuration:
#
# ./configure --enable-tokenisers --enable-tts --enable-phonetic --enable-grammarchecker
#
# Two bugs left to fix:
# - unknowns should just copy the input word form
# - when multiple variants are generated, pick the one identical or closest to
#   the input, if no match found, pick the first one
#
# see https://github.com/giellalt/lang-smj/issues/22

# set -x

hfst-tokenise -g   'tokeniser-tts-cggt-desc.pmhfst'         \
 | divvun-blanktag 'analyser-gt-whitespace.hfst'            \
 | vislcg3 -g 'generated-remove-lexicalised-compounds.bin'  \
 | vislcg3 -g 'valency.bin'                                 \
 | vislcg3 -g 'mwe-dis.bin'                                 \
 | vislcg3 -g 'disambiguator.bin'                           \
 | vislcg3 -g 'functions.bin'                               \
 | vislcg3 -g 'dependency.bin'                              \
 | cut -d'"' -f1-3                                          \
 | sed 's/Area\/NO/Area\/SE/g'                              \
 | sed 's/ *$//'                                            \
 | sed 's/ OLang\/...//g'                                   \
 | sed 's/ [IT]V//g'                                        \
 | sed 's/ Ex\/[TI]V//g'                                    \
 | uniq                                                     \
 | divvun-suggest                                           \
   -m ../grammarcheckers/errors.xml                         \
   -g ../grammarcheckers/generator-gramcheck-gt-norm.hfstol \
   -l smj -A                                                \
 | gawk -f convert-helper.awk                               \
 | uniq                   \
 | sed 's/^:$/: /'        \
 | sed 's/^://'           \
 | tr -d '\n'             \
 | sed 's/\\n/|/g'        \
 | tr '|' '\n' 
