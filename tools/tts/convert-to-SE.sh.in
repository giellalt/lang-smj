#!/bin/sh

# Converts SMJ texts written following NO conventions and variants to one which
# follows SE conventions and variants. It uses the TTS text processing pipeline
# in combination with the grammar checker generator. To run it, you need to
# build SMJ with the following configuration:
#
# ./configure --enable-tokenisers --enable-tts --enable-phonetic --enable-grammarchecker

# set -x


# - various clean operations (partly due to bugs in the fsts)
# - generate word forms using divvun-suggest + grammar checker generator -
#   divvun suggest handles the CG format natively
# - clean the output using external AWK script
# - regenerate input format with new word forms using data escaped on `:` lines

hfst-tokenise -g   'tokeniser-tts-cggt-desc.pmhfst'        |
  divvun-blanktag 'analyser-gt-whitespace.hfst'            | # tag whitespace on nearest cohort
  vislcg3 -g 'generated-remove-lexicalised-compounds.bin'  | # remove lexicalised compounds? Do we want that in the conversion?
  vislcg3 -g 'valency.bin'                                 | # add valency
  vislcg3 -g 'mwe-dis.bin'                                 | # disambiguate ambiguous tokenisation
  vislcg3 -g 'disambiguator.bin'                           | # regular disambiguation
  vislcg3 -g 'functions.bin'                               | # add functions - needed?
  vislcg3 -g 'dependency.bin'                              | # add dependencies - needed?
  cut -d'"' -f1-3                                          | # get rid of irrelevant data
  sed 's/Area\/NO/Area\/SE/g'                              | # replace Area/NO with Area/SE (our target)
  sed 's/ *$//'                                            | # remove final spaces (some analyses differs only in that)
  sed 's/ OLang\/...//g'                                   | # remove OLang/xxx tags
  sed 's/ Err\/Orth//g'                                    | # remove Err/Orth tags
  sed 's/ [IT]V//g'                                        | # remove transitivity tags
  sed 's/ Ex\/[TI]V//g'                                    | # remove Ex/ trans. tags
  uniq                                                     | # uniq all analyses
  divvun-suggest                                            \
   -m ../grammarcheckers/errors.xml                         \
   -g ../grammarcheckers/generator-gramcheck-gt-norm.hfstol \
   -l smj -A                                               | # generate SE wordforms
  tr ' ' '_'                                               | # protect spaces
  gawk -f @GIELLA_CORE@/scripts/convert-divvunsuggest-to-almostplain.awk | # cleanup script
  tr '_' ' '             | # reinstate spaces
  grep -v '^\\n$'        | # remove bare newlines (introduced by the awk script?)
  grep -v '"<>"'         | # remove empty wordforms
  uniq                   | # unique remaining word forms
  sed 's/^:$/: /'        | # add back escaped spaces removed earlier
  sed 's/^://'           | # remove CG stream escape symbol
  sed 's/@COLON@/:/g'    | # reinstate protected colons (from awk script)
  tr -d '\n'             | # remove real newlines
  sed 's/\\n/|/g'        | # prepare escaped (original) newlines for recovery
  tr '|' '\n'            | # reinstated original newlines
